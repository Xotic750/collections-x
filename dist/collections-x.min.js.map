{"version":3,"sources":["webpack://collectionsX/webpack/universalModuleDefinition","webpack://collectionsX/webpack/bootstrap","webpack://collectionsX/./node_modules/is-string/index.js","webpack://collectionsX/./node_modules/is-symbol/index.js","webpack://collectionsX/./node_modules/is-arguments/index.js","webpack://collectionsX/./node_modules/object-keys/isArguments.js","webpack://collectionsX/./node_modules/is-date-object/index.js","webpack://collectionsX/./node_modules/object-keys/index.js","webpack://collectionsX/./node_modules/is-boolean-object/index.js","webpack://collectionsX/./node_modules/has-symbols/index.js","webpack://collectionsX/(webpack)/buildin/global.js","webpack://collectionsX/./node_modules/has-symbols/shams.js","webpack://collectionsX/./node_modules/object-keys/implementation.js","webpack://collectionsX/../src/is-nil-x.js","webpack://collectionsX/../src/require-object-coercible-x.js","webpack://collectionsX/../src/to-object-x.js","webpack://collectionsX/../src/is-primitive-x.js","webpack://collectionsX/../src/has-boxed-string-x.js","webpack://collectionsX/../src/has-working-bind-x.js","webpack://collectionsX/../src/noop-x.js","webpack://collectionsX/../src/util-pusher-x.js","webpack://collectionsX/../src/simple-bind-x.js","webpack://collectionsX/../src/simple-call-x.js","webpack://collectionsX/../src/attempt-x.js","webpack://collectionsX/../src/white-space-x.js","webpack://collectionsX/../src/has-symbol-support-x.js","webpack://collectionsX/../src/to-boolean-x.js","webpack://collectionsX/../src/simple-methodize-x.js","webpack://collectionsX/../src/to-string-tag-x.js","webpack://collectionsX/../src/has-to-string-tag-x.js","webpack://collectionsX/../src/to-string-x.js","webpack://collectionsX/../src/require-coercible-to-string-x.js","webpack://collectionsX/../src/trim-left-x.js","webpack://collectionsX/../src/trim-right-x.js","webpack://collectionsX/../src/trim-x.js","webpack://collectionsX/../src/normalize-space-x.js","webpack://collectionsX/../src/replace-comments-x.js","webpack://collectionsX/../src/is-function-x.js","webpack://collectionsX/../src/to-primitive-x.js","webpack://collectionsX/../src/to-property-key-x.js","webpack://collectionsX/../src/object-define-property-x.js","webpack://collectionsX/../src/has-own-property-x.js","webpack://collectionsX/../src/to-string-symbols-supported-x.js","webpack://collectionsX/../src/assert-is-object-x.js","webpack://collectionsX/../src/array-for-each-x.js","webpack://collectionsX/../src/object-get-own-property-descriptor-x.js","webpack://collectionsX/../src/assert-is-function-x.js","webpack://collectionsX/../src/parse-int-x.js","webpack://collectionsX/../src/nan-x.js","webpack://collectionsX/../src/to-number-x.js","webpack://collectionsX/../src/is-nan-x.js","webpack://collectionsX/../src/is-finite-x.js","webpack://collectionsX/../src/infinity-x.js","webpack://collectionsX/../src/math-sign-x.js","webpack://collectionsX/../src/to-integer-x.js","webpack://collectionsX/../src/to-length-x.js","webpack://collectionsX/../src/split-if-boxed-bug-x.js","webpack://collectionsX/../src/array-any-x.js","webpack://collectionsX/../src/array-all-x.js","webpack://collectionsX/../src/is-array-x.js","webpack://collectionsX/../src/array-like-slice-x.js","webpack://collectionsX/../src/is-object-like-x.js","webpack://collectionsX/../src/math-clamp-x.js","webpack://collectionsX/../src/is-index-x.js","webpack://collectionsX/../src/property-is-enumerable-x.js","webpack://collectionsX/../src/object-keys-x.js","webpack://collectionsX/../src/is-regexp-x.js","webpack://collectionsX/../src/array-filter-x.js","webpack://collectionsX/../src/get-own-property-symbols-x.js","webpack://collectionsX/../src/get-own-enumerable-property-symbols-x.js","webpack://collectionsX/../src/get-own-enumerable-keys-x.js","webpack://collectionsX/../src/object-define-properties-x.js","webpack://collectionsX/../src/is-integer-x.js","webpack://collectionsX/../src/is-safe-integer-x.js","webpack://collectionsX/../src/is-length-x.js","webpack://collectionsX/../src/is-array-like-x.js","webpack://collectionsX/../src/is-surrogate-pair-x.js","webpack://collectionsX/../src/same-value-x.js","webpack://collectionsX/../src/same-value-zero-x.js","webpack://collectionsX/../src/find-index-x.js","webpack://collectionsX/../src/calculate-from-index-x.js","webpack://collectionsX/../src/index-of-x.js","webpack://collectionsX/../src/array-slice-x.js","webpack://collectionsX/../src/array-reduce-right-x.js","webpack://collectionsX/../src/big-counter-x.js","webpack://collectionsX/../src/util-get-getter-x.js","webpack://collectionsX/../src/is-map-x.js","webpack://collectionsX/../src/is-set-x.js","webpack://collectionsX/../src/array-some-x.js","webpack://collectionsX/../src/get-prototype-of-x.js","webpack://collectionsX/../src/symbol-iterator-x.js","webpack://collectionsX/../src/symbol-species-x.js","webpack://collectionsX/../src/object-create-x.js","webpack://collectionsX/./node_modules/is-var-name/index.mjs","webpack://collectionsX/../src/rename-function-x.js","webpack://collectionsX/../src/collections-x.js"],"names":["root","factory","exports","module","define","amd","$globalThis","ObjectCtr","constructor","objectPrototype","prototype","defineProperty","getGlobalFallback","self","window","global","returnThis","this","get","configurable","__defineGetter__","$$globalThis$$","error","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","enumerable","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","strValue","String","valueOf","toStr","toString","hasToStringTag","e","tryStringObject","symToStr","symStringRegex","test","isSymbolObject","isStandardArguments","isLegacyArguments","length","callee","supportsStandardArguments","arguments","str","isArgs","getDay","Date","tryDateObject","slice","Array","origKeys","keys","keysShim","originalKeys","shim","args","boolToStr","Boolean","tryBooleanObject","origSymbol","hasSymbolSham","g","Function","getOwnPropertySymbols","iterator","obj","sym","symObj","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor","has","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","k","isObject","isFunction","isArguments","isString","theKeys","TypeError","skipProto","push","j","skipConstructor","equalsConstructorPrototypeIfNotBuggy","castObject","val","boxedString","a1","a2","context","testThis","boundFn","apply","arg1","arg2","oracle","Ctr","BoundFn","returned","split","Math","max","$split","string","pattern","arrayLike","from","target","iterable","nativeBind","getMax","a","b","boundFns","binder","boundLength","f","h","getBoundFn","bindArgs","fn","Empty","boundArgs","result","thisArg","bound","$TypeError","nativeApply","$apply","F","V","threw","hasSymbolSupport","prototypeMethod","methodizedToString","castString","list","code","description","es5","es2015","es2016","es2017","es2018","stringES2018","reLeft","RegExpCtr","methodizedReplace","replace","reRight","reNormalize","STRIP_COMMENTS","replacement","FunctionCtr","methodizedFunctionToString","ctrRx","methodizedTest","hasNativeClass","isES6ClassFn","allowClass","tryFuncToString","strTag","StringCtr","NumberCtr","symToPrimitive","toPrimitive","symValueOf","toStringOrder","toNumberOrder","ordinary","hint","assertHint","methodNames","method","getHint","supplied","func","exoticToPrim","input","newHint","preferredType","definePropertyFallback","$defineProperty","argument","hop","pToString","isSymbolFn","message","msg","nd","nativeDefProp","desc","writable","setter","set","prototypeOfObject","supportsAccessors","defineGetter","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","testResult","document","createElement","propKey","propDesc","__proto__","spy","res","getOPDFallback1","getOPDFallback2","$getOwnPropertyDescriptor","callback","nativeParseInt","parseInt","castNumber","methodizedCharAt","charAt","hexRegex","radix","methodizedStringSlice","binaryRegex","RegExpConstructor","octalRegex","nonWSregex","invalidHexLiteral","parseString","toNum","isBinary","isOctal","hasNonWS","isInvalidHexLiteral","trimmed","toNumber","number","x","abs","floor","len","strSplit","identity","array","callBack","index","nfe","forEach","nativeForEach","isStrict","item","0","1","3","4","fragment","createDocumentFragment","div","appendChild","childNodes","thisTest","iteratee","nia","isArray","nativeIsArray","setRelative","start","end","relativeEnd","finalEnd","next","minVal","min","RangeError","reIsUint","rxTest","propIsEnumerable","ngopd","nativeGOPD","prop","worksWithPrim","isStringIndex","notPrototypeOfObject","throwsWithNull","worksWithRegex","worksWithArgs","regexExec","exec","lastIndex","tryRegexExecCall","nativeKeys","either","y","testObj","objectKeys","regexKeys","nf","filter","nativeFilter","getTest5Result","predicate","nativeGOPS","symbol","concat","properties","props","methodizedCharCodeAt","charCodeAt","getPair1","char1","first","second","getPair2","char2","isPair","argsLength","value1","value2","pFindIndex","findIndex","idx","fromIndex","doc","resultDocElement","nio","indexOf","nativeIndexOf","mathMax","pIndexOf","testArr","searchElement","findIdxFrom","extendFn","fIdx","argLength","extend","toLowerCase","element","methodizedSlice","failArray","failString","failDOM","documentElement","rr","reduceRight","nativeReduceR","iteratee5","acc","node","arg","reducer","digit","counterToString","count","BigCounter","clone","howMany","carry","zi","reset","toJSON","stubTrue","creator","validator","getterName","resTest1","getSize","Map","Set","some","nativeSome","console","log","nativeGetPrototypeOf","getPrototypeOf","prototypeOfCtr","ctr","ignore","proto","hasRealSymbolIterator","hasFakeSymbolIterator","hasSymbolIterator","getOtherSymbolIterator","$iterator$","getSymIt","species","nCreate","nativeCreate","getShapes","Shape","move","Rectangle","_","supportsProto","createEmptyNoProto","empty","domain","ActiveXObject","xDoc","write","close","parentWindow","getEmptyViaActiveX","iframe","style","display","src","parent","body","contentWindow","removeChild","getEmptyViaIFrame","isPrototypeOf","toLocaleString","E","createEmpty","T","isVarName","trim","supportsFunctionRenaming","force","Error","SIZE","NEXT","VALUE","MAP","SET","PROP_KEY","PROP_VALUE","KIND_KEY_VALUE","tempArray","splice","setPrototypeOf","symIt","kind","indexof","parseIterable","getCharsString","nxt","assertStringEntryObject","nextKey","symbolIterator","parseArrayLike","updateBaseForEach","pointers","id","order","setContextFoundBaseDelete","setContextFoundBaseAddSet","thisIteratorDescriptor","thisSpeciesDescriptor","SetIt","iteratorKind","more","getSetNextObject","hasDescriptor","sizeDescriptor","setValuesIterator","SetImplementation","add","clear","delete","MapIt","getMapNextObject","MapImplementation","entries","Export","Subject","MyClass","testObject","MapConstructor","testMap","MyMap","testMapProto","fixee","peformMapFix","SetConstructor","testSet","MySet","testSetProto","peformSetFix"],"mappings":"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","file":"collections-x.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"collectionsX\"] = factory();\n\telse\n\t\troot[\"collectionsX\"] = factory();\n})((function () {\n  'use strict';\n\n  var ObjectCtr = {}.constructor;\n  var objectPrototype = ObjectCtr.prototype;\n  var defineProperty = ObjectCtr.defineProperty;\n  var $globalThis;\n  var getGlobalFallback = function() {\n    if (typeof self !== 'undefined') {\n      return self;\n    }\n\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n\n    if (typeof global !== 'undefined') {\n      return global;\n    }\n\n    return void 0;\n  };\n\n  var returnThis = function() {\n    return this;\n  };\n\n  try {\n    if (defineProperty) {\n      defineProperty(objectPrototype, '$$globalThis$$', {\n        get: returnThis,\n        configurable: true\n      });\n    } else {\n      objectPrototype.__defineGetter__('$$globalThis$$', returnThis);\n    }\n\n    $globalThis = typeof $$globalThis$$ === 'undefined' ? getGlobalFallback() : $$globalThis$$;\n\n    delete objectPrototype.$$globalThis$$;\n\n    return $globalThis;\n  } catch (error) {\n    return getGlobalFallback();\n  }\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') { return true; }\n\tif (typeof value !== 'object') { return false; }\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","'use strict';\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar toStr = Object.prototype.toString;\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn toStr.call(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\ttoStr.call(value) !== '[object Array]' &&\n\t\ttoStr.call(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateObject(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) { return false; }\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar boolToStr = Boolean.prototype.toString;\n\nvar tryBooleanObject = function tryBooleanObject(value) {\n\ttry {\n\t\tboolToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar boolClass = '[object Boolean]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isBoolean(value) {\n\tif (typeof value === 'boolean') { return true; }\n\tif (typeof value !== 'object') { return false; }\n\treturn hasToStringTag ? tryBooleanObject(value) : toStr.call(value) === boolClass;\n};\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n */\nconst isNil = function isNil(value) {\n  /* eslint-disable-next-line lodash/prefer-is-nil */\n  return value === null || typeof value === 'undefined';\n};\n\nexport default isNil;\n","import isNil from 'is-nil-x';\n\n/**\n * The abstract operation RequireObjectCoercible throws an error if argument\n * is a value that cannot be converted to an Object using ToObject.\n *\n * @param {*} [value] - The `value` to check.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {string} The `value`.\n */\nconst requireObjectCoercible = function requireObjectCoercible(value) {\n  if (isNil(value)) {\n    throw new TypeError(`Cannot call method on ${value}`);\n  }\n\n  return value;\n};\n\nexport default requireObjectCoercible;\n","import requireObjectCoercible from 'require-object-coercible-x';\n\nconst castObject = {}.constructor;\n\n/**\n * The abstract operation ToObject converts argument to a value of\n * type Object.\n *\n * @param {*} value - The `value` to convert.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {!object} The `value` converted to an object.\n */\nconst toObject = function toObject(value) {\n  return castObject(requireObjectCoercible(value));\n};\n\nexport default toObject;\n","/**\n * Returns true if the value is a primitive.\n *\n * @param {*} [val] - The value to test.\n * @returns {boolean} True if a primitive, otherwise false..\n */\nconst isPrimitive = function isPrimitive(val) {\n  return typeof val === 'object' ? val === null : typeof val !== 'function';\n};\n\nexport default isPrimitive;\n","const string = 'a';\nconst boxedString = {}.constructor(string);\n\n/**\n * Check failure of by-index access of string characters (IE < 9)\n * and failure of `0 in boxedString` (Rhino).\n *\n * `true` if no failure; otherwise `false`.\n *\n * @type boolean\n */\nconst hasBoxed = boxedString[0] === string && 0 in boxedString;\n\nexport default hasBoxed;\n","import noop from 'noop-x';\n\nconst {bind} = noop;\n\nconst test1 = function test1() {\n  let a1 = null;\n  let a2 = null;\n  let context = null;\n  const testThis = [];\n\n  const test1Fn = function test1Fn(arg1, arg2) {\n    /* eslint-disable-next-line babel/no-invalid-this */\n    context = this;\n    a1 = arg1;\n    a2 = arg2;\n\n    /* eslint-disable-next-line prefer-rest-params */\n    return arguments;\n  };\n\n  try {\n    const boundFn = bind.apply(test1Fn, [testThis, 1]);\n    const args = boundFn(2);\n\n    return boundFn.length === 1 && args.length === 2 && a1 === 1 && a2 === 2 && context === testThis;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst test2 = function test2() {\n  let a1 = null;\n  let a2 = null;\n  let context = null;\n  const oracle = [1, 2, 3];\n\n  const Ctr = function Ctr(arg1, arg2) {\n    a1 = arg1;\n    a2 = arg2;\n    context = this;\n\n    return oracle;\n  };\n\n  try {\n    const BoundFn = bind.apply(Ctr, [null]);\n    const returned = new BoundFn(1, 2);\n\n    return BoundFn.length === Ctr.length && returned === oracle && a1 === 1 && a2 === 2 && context !== oracle;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Indicates if the engine has a working bind function.\n *\n * @type {boolean}\n */\nconst isWorking = typeof bind === 'function' && test1() && test2();\n\nexport default isWorking;\n","/**\n * This method returns undefined.\n *\n * @returns {undefined} Always undefined.\n */\nconst noop = function noop() {}; /* eslint-disable-line lodash/prefer-noop */\n\nexport default noop;\n","import isPrimitive from 'is-primitive-x';\nimport isString from 'is-string';\nimport hasBoxed from 'has-boxed-string-x';\nimport hasWorkingBind from 'has-working-bind-x';\n\nconst EMPTY_STRING = '';\nconst {split} = EMPTY_STRING;\nconst {max} = Math;\nconst {bind, call} = isPrimitive;\nexport const stringSplit = function stringSplit(string, pattern) {\n  // noinspection JSUnresolvedFunction\n  return split.call(string, pattern);\n};\n\nexport const $split = hasWorkingBind ? bind.call(call, split) : stringSplit;\n\nexport const getIterable = function getIterable(arrayLike) {\n  // noinspection JSUnresolvedFunction\n  return isString(arrayLike) ? $split(arrayLike, EMPTY_STRING) : arrayLike;\n};\n\n// eslint-disable jsdoc/no-undefined-types\n// noinspection JSCommentMatchesSignature\n/**\n * This pushes or concatenates into a new or existing array.\n *\n * @param {Array} arrayLike - The source.\n * @param {number} [from=0] - The from source index.\n * @param {Array} [target=[]] - The target array.\n * @returns {*} The target array.\n */\n// eslint-enable jsdoc/no-undefined-types\nconst pusher = function pusher(arrayLike, from) {\n  /* eslint-disable-next-line prefer-rest-params */\n  const target = arguments.length > 2 ? arguments[2] : [];\n\n  if (typeof arrayLike !== 'string' && isPrimitive(arrayLike)) {\n    return target;\n  }\n\n  const iterable = hasBoxed ? arrayLike : getIterable(arrayLike);\n  const {length} = iterable;\n  for (let i = max(0, from) || 0; i < length; i += 1) {\n    target[target.length] = arrayLike[i];\n  }\n\n  return target;\n};\n\nexport default pusher;\n","import hasWorkingBind from 'has-working-bind-x';\nimport pusher from 'util-pusher-x';\n\nconst {bind: nativeBind, call} = pusher;\nconst ERROR_MESSAGE = 'bind called on incompatible ';\nconst object = {};\nconst ObjectCtr = object.constructor;\nconst toStringTag = object.toString;\nconst funcType = '[object Function]';\nconst ZERO = 0;\nconst argsOffset = 2;\n\nconst getMax = function getMax(a, b) {\n  return a >= b ? a : b;\n};\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && toStringTag.apply(value) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + value);\n  }\n};\n\nconst boundFns = [\n  function zero(binder) {\n    return function boundFn() {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments));\n    };\n  },\n  function one(binder, boundLength) {\n    return function boundFn(a) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a]));\n    };\n  },\n  function two(binder, boundLength) {\n    return function boundFn(a, b) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b]));\n    };\n  },\n  function three(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c]));\n    };\n  },\n  function four(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d]));\n    };\n  },\n  function five(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e]));\n    };\n  },\n  function six(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f]));\n    };\n  },\n  function seven(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f, g) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f, g]));\n    };\n  },\n  function eight(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f, g, h) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f, g, h]));\n    };\n  },\n];\n\nconst getBoundFn = function getBoundFn(args) {\n  const [binder, target, bindArgs] = args;\n  const boundLength = getMax(ZERO, target.length - getMax(ZERO, bindArgs.length - argsOffset));\n  const fn = boundFns[boundLength];\n  const boundFn = fn ? fn(binder, boundLength) : boundFns[ZERO](binder);\n\n  if (target.prototype) {\n    /* eslint-disable-next-line lodash/prefer-noop */\n    const Empty = function Empty() {};\n\n    Empty.prototype = target.prototype;\n    boundFn.prototype = new Empty();\n    Empty.prototype = null;\n  }\n\n  return boundFn;\n};\n\nconst getResult = function getResult(target, boundArgs) {\n  /* eslint-disable-next-line babel/no-invalid-this */\n  const result = target.apply(this, boundArgs);\n\n  /* eslint-disable-next-line babel/no-invalid-this,babel/new-cap */\n  return ObjectCtr(result) === result ? result : this;\n};\n\nexport const implementation = function bind(target, thisArg) {\n  assertIsFunction(target);\n  /* eslint-disable-next-line prefer-rest-params */\n  const bindArgs = arguments;\n\n  let bound;\n  const binder = function binder() {\n    /* eslint-disable-next-line prefer-rest-params */\n    const boundArgs = pusher(arguments, ZERO, pusher(bindArgs, argsOffset));\n\n    /* eslint-disable-next-line babel/no-invalid-this */\n    return this instanceof bound ? getResult.apply(this, [target, boundArgs]) : target.apply(thisArg, boundArgs);\n  };\n\n  bound = getBoundFn([binder, target, bindArgs]);\n\n  return bound;\n};\n\n/**\n * The bind() method creates a new function that, when called, has its this\n * keyword set to the provided value, with a given sequence of arguments\n * preceding any provided when the new function is called.\n *\n * @function bind\n * @param {Function} target - The target function.\n * @param {*} [thisArg] - The value to be passed as the this parameter to the target\n *  function when the bound function is called. The value is ignored if the\n *  bound function is constructed using the new operator.\n * @param {...*} [args] - Arguments to prepend to arguments provided to the bound\n *  function when invoking the target function.\n * @throws {TypeError} If target is not a function.\n * @returns {Function} The bound function.\n */\nconst $bind = hasWorkingBind ? call.bind(nativeBind) : implementation;\n\nexport default $bind;\n","import pusher from 'util-pusher-x';\nimport bind from 'simple-bind-x';\n\nconst $TypeError = TypeError;\nconst {apply: nativeApply, call: nativeCall} = bind;\nconst $apply = bind(nativeCall, nativeApply);\nconst toStringTag = bind(nativeApply, {}.toString);\nconst ERROR_MESSAGE = ' is not a function';\nconst funcType = '[object Function]';\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && toStringTag(value) !== funcType) {\n    throw new $TypeError(value + ERROR_MESSAGE);\n  }\n\n  return value;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The abstract operation Call is used to call the [[Call]] internal method of a function object.\n *\n * @function call\n * @param {Function} F - The target function.\n * @param {*} [V] - The context.\n * @param {Array} [args] - Argument to call the function with.\n * @throws {TypeError} If target is not a function.\n * @returns {*} The the result of invoking the function.\n * @see https://www.ecma-international.org/ecma-262/6.0/#sec-call\n */\n// eslint-enable jsdoc/check-param-names\nconst call = function call(F, V) {\n  /* eslint-disable-next-line prefer-rest-params */\n  return $apply(assertIsFunction(F), V, pusher(arguments[2]));\n};\n\nexport default call;\n","import pusher from 'util-pusher-x';\nimport call from 'simple-call-x';\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @function attempt\n * @param {Function} [fn] - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\n// eslint-disable jsdoc/check-param-names\nconst attempt = function attempt(fn) {\n  try {\n    return {\n      threw: false,\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      value: call(fn, this, pusher(arguments, 1)),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n};\n\nexport default attempt;\n","/**\n * A record of a white space character.\n *\n * @typedef {object} CharRecord\n * @property {number} code - The character code.\n * @property {string} description - A description of the character.\n * @property {boolean} es5 - Whether the spec lists this as a white space.\n * @property {boolean} es2015 - Whether the spec lists this as a white space.\n * @property {boolean} es2016 - Whether the spec lists this as a white space.\n * @property {boolean} es2017 - Whether the spec lists this as a white space.\n * @property {boolean} es2018 - Whether the spec lists this as a white space.\n * @property {string} string - The character string.\n */\n\n/**\n * An array of the whitespace char codes, string, descriptions and language\n * presence in the specifications.\n *\n * @type Array.<CharRecord>\n */\nexport const list = [\n  {\n    code: 0x0009,\n    description: 'Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0009',\n  },\n  {\n    code: 0x000a,\n    description: 'Line Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000a',\n  },\n  {\n    code: 0x000b,\n    description: 'Vertical Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000b',\n  },\n  {\n    code: 0x000c,\n    description: 'Form Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000c',\n  },\n  {\n    code: 0x000d,\n    description: 'Carriage Return',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000d',\n  },\n  {\n    code: 0x0020,\n    description: 'Space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0020',\n  },\n  /*\n  {\n    code: 0x0085,\n    description: 'Next line',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u0085'\n  }\n  */\n  {\n    code: 0x00a0,\n    description: 'No-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u00a0',\n  },\n  {\n    code: 0x1680,\n    description: 'Ogham space mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u1680',\n  },\n  {\n    code: 0x180e,\n    description: 'Mongolian vowel separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: false,\n    es2018: false,\n    string: '\\u180e',\n  },\n  {\n    code: 0x2000,\n    description: 'En quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2000',\n  },\n  {\n    code: 0x2001,\n    description: 'Em quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2001',\n  },\n  {\n    code: 0x2002,\n    description: 'En space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2002',\n  },\n  {\n    code: 0x2003,\n    description: 'Em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2003',\n  },\n  {\n    code: 0x2004,\n    description: 'Three-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2004',\n  },\n  {\n    code: 0x2005,\n    description: 'Four-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2005',\n  },\n  {\n    code: 0x2006,\n    description: 'Six-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2006',\n  },\n  {\n    code: 0x2007,\n    description: 'Figure space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2007',\n  },\n  {\n    code: 0x2008,\n    description: 'Punctuation space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2008',\n  },\n  {\n    code: 0x2009,\n    description: 'Thin space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2009',\n  },\n  {\n    code: 0x200a,\n    description: 'Hair space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u200a',\n  },\n  /*\n  {\n    code: 0x200b,\n    description: 'Zero width space',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u200b'\n  },\n  */\n  {\n    code: 0x2028,\n    description: 'Line separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2028',\n  },\n  {\n    code: 0x2029,\n    description: 'Paragraph separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2029',\n  },\n  {\n    code: 0x202f,\n    description: 'Narrow no-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u202f',\n  },\n  {\n    code: 0x205f,\n    description: 'Medium mathematical space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u205f',\n  },\n  {\n    code: 0x3000,\n    description: 'Ideographic space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u3000',\n  },\n  {\n    code: 0xfeff,\n    description: 'Byte Order Mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\ufeff',\n  },\n];\n\n/**\n * A string of the ES5 to ES2016 whitespace characters.\n *\n * @type string\n */\nlet stringES2016 = '';\n\n/**\n * A string of the ES2017 to ES2018 whitespace characters.\n *\n * @type string\n */\nlet stringES2018 = '';\nconst {length} = list;\nfor (let i = 0; i < length; i += 1) {\n  if (list[i].es2016) {\n    stringES2016 += list[i].string;\n  }\n\n  if (list[i].es2018) {\n    stringES2018 += list[i].string;\n  }\n}\n\nconst string2018 = stringES2018;\n\nexport default string2018;\nexport const string2016 = stringES2016;\n","import attempt from 'attempt-x';\nimport isSymbol from 'is-symbol';\n\nconst hasSymbolSupport = attempt(() => {\n  /* eslint-disable-next-line compat/compat */\n  return typeof Symbol === 'function' && isSymbol(Symbol(''));\n});\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbolSupport.threw === false && hasSymbolSupport.value === true;\n","/**\n * The abstract operation ToBoolean converts argument to a value of type Boolean.\n *\n * @param {*} [value] - The value to be converted.\n * @returns {boolean} 'true' if value is truthy; otherwise 'false'.\n */\nconst toBoolean = function toBoolean(value) {\n  return !!value;\n};\n\nexport default toBoolean;\n","import call from 'simple-call-x';\nimport pusher from 'util-pusher-x';\n\nconst toStringTag = {}.toString;\nconst ERROR_MESSAGE = 'methodize called on incompatible ';\nconst funcType = '[object Function]';\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && call(toStringTag, value) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + value);\n  }\n\n  return value;\n};\n\n/**\n * Methodize a prototype method. Compliant to 8 arguments.\n *\n * @param {Function} prototypeMethod - The prototype method to methodize.\n * @throws {TypeError} If target is not a function.\n * @returns {Function} The static method.\n */\nconst methodize = function methodize(prototypeMethod) {\n  assertIsFunction(prototypeMethod);\n\n  return function methodized() {\n    /* eslint-disable-next-line prefer-rest-params */\n    return call(prototypeMethod, arguments[0], pusher(arguments, 1));\n  };\n};\n\nexport default methodize;\n","import methodize from 'simple-methodize-x';\n\nconst methodizedToString = methodize({}.toString);\n\n/**\n * The `toStringTag` method returns \"[object type]\", where type is the\n * object type.\n *\n * @param {*} [value] - The object of which to get the object type string.\n * @returns {string} The object type string.\n */\nconst toStringTag = function toStringTag(value) {\n  if (value === null) {\n    return '[object Null]';\n  }\n\n  if (typeof value === 'undefined') {\n    return '[object Undefined]';\n  }\n\n  return methodizedToString(value);\n};\n\nexport default toStringTag;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/**\n * Indicates if `Symbol.toStringTag`exists and is the correct type.\n * `true`, if it exists and is the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbols &&\n  /* eslint-disable-next-line compat/compat */\n  isSymbol(Symbol.toStringTag);\n","import isSymbol from 'is-symbol';\n\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a string';\nconst castString = ERROR_MESSAGE.constructor;\n/**\n * The abstract operation ToString converts argument to a value of type String.\n *\n * @param {*} [value] - The value to convert to a string.\n * @throws {TypeError} If `value` is a Symbol.\n * @returns {string} The converted value.\n */\nconst ToString = function ToString(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return castString(value);\n};\n\nexport default ToString;\n","import requireObjectCoercible from 'require-object-coercible-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method requires an argument is corecible then converts using ToString.\n *\n * @param {*} [value] - The value to converted to a string.\n * @throws {TypeError} If value is null or undefined.\n * @returns {string} The value as a string.\n */\nconst requireCoercibleToString = function requireCoercibleToString(value) {\n  return toStr(requireObjectCoercible(value));\n};\n\nexport default requireCoercibleToString;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace from 'white-space-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reLeft = new RegExpCtr(`^[${whiteSpace}]+`);\nconst methodizedReplace = methodize(EMPTY_STRING.replace);\n\n/**\n * This method removes whitespace from the start of a string. (ES2019).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nconst trimStart = function trimStart(string) {\n  return methodizedReplace(requireCoercibleToString(string), reLeft, EMPTY_STRING);\n};\n\nexport default trimStart;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace from 'white-space-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reRight = new RegExpCtr(`[${whiteSpace}]+$`);\nconst methodizedReplace = methodize(EMPTY_STRING.replace);\n\n/**\n * This method removes whitespace from the end of a string. (ES2019).\n *\n * @param {string} [string] - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nconst trimEnd = function trimEnd(string) {\n  return methodizedReplace(requireCoercibleToString(string), reRight, EMPTY_STRING);\n};\n\nexport default trimEnd;\n","import trimStart from 'trim-left-x';\nimport trimEnd from 'trim-right-x';\n\n/**\n * This method removes whitespace from the start and end of a string.\n * (ES2019).\n *\n * @param {string} [string] - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nconst trim = function trim(string) {\n  return trimStart(trimEnd(string));\n};\n\nexport default trim;\n","import trim from 'trim-x';\nimport whiteSpace from 'white-space-x';\nimport methodize from 'simple-methodize-x';\n\nconst SPACE = ' ';\nconst RegExpCtr = /none/.constructor;\nconst reNormalize = new RegExpCtr(`[${whiteSpace}]+`, 'g');\nconst methodizedReplace = methodize(SPACE.replace);\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2019).\n *\n * @param {string} [string] - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n */\nconst normalizeSpace = function normalizeSpace(string) {\n  return methodizedReplace(trim(string), reNormalize, SPACE);\n};\n\nexport default normalizeSpace;\n","import toStr from 'to-string-x';\nimport requireCoercibleToString from 'require-coercible-to-string-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nconst methodizedReplace = methodize(EMPTY_STRING.replace);\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} [string] - The string to be stripped.\n * @param {string} [replacement=''] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n */\nconst replaceComments = function replaceComments(string, replacement) {\n  return methodizedReplace(\n    requireCoercibleToString(string),\n    STRIP_COMMENTS,\n    arguments.length > 1 ? toStr(replacement) : EMPTY_STRING,\n  );\n};\n\nexport default replaceComments;\n","import attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\nimport toStringTag from 'to-string-tag-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport isPrimitive from 'is-primitive-x';\nimport normalise from 'normalize-space-x';\nimport deComment from 'replace-comments-x';\nimport methodize from 'simple-methodize-x';\n\nconst FunctionCtr = attempt.constructor;\nconst SPACE = ' ';\nconst methodizedFunctionToString = methodize(attempt.toString);\nconst funcTag = '[object Function]';\nconst genTag = '[object GeneratorFunction]';\nconst asyncTag = '[object AsyncFunction]';\nconst ctrRx = /^class /;\nconst methodizedTest = methodize(ctrRx.test);\n\nconst hasNativeClass =\n  attempt(function attemptee() {\n    /* eslint-disable-next-line babel/new-cap */\n    return FunctionCtr('\"use strict\"; return class My {};')();\n  }).threw === false;\n\nconst testClassString = function testClassString(value) {\n  return methodizedTest(ctrRx, normalise(deComment(methodizedFunctionToString(value), SPACE)));\n};\n\nconst isES6ClassFn = function isES6ClassFunc(value) {\n  const result = attempt(testClassString, value);\n\n  return result.threw === false && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst tryFuncToString = function funcToString(value, allowClass) {\n  if (hasNativeClass && allowClass === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return (\n    attempt(function attemptee() {\n      return methodizedFunctionToString(value);\n    }).threw === false\n  );\n};\n\nconst compareTags = function compareTags(value) {\n  const strTag = toStringTag(value);\n\n  return strTag === funcTag || strTag === genTag || strTag === asyncTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst isFunction = function isFunction(value, allowClass) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (hasToStringTag) {\n    return tryFuncToString(value, toBoolean(allowClass));\n  }\n\n  if (hasNativeClass && toBoolean(allowClass) === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return compareTags(value);\n};\n\nexport default isFunction;\n","import hasSymbols from 'has-symbol-support-x';\nimport isPrimitive from 'is-primitive-x';\nimport isDate from 'is-date-object';\nimport isSymbol from 'is-symbol';\nimport isFunction from 'is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport isNil from 'is-nil-x';\nimport call from 'simple-call-x';\n\nconst ZERO = 0;\nconst ONE = 1;\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void ZERO;\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst DEFAULT = 'default';\nconst StringCtr = STRING.constructor;\nconst NumberCtr = ZERO.constructor;\n/* eslint-disable-next-line compat/compat */\nconst symToPrimitive = hasSymbols && Symbol.toPrimitive;\n/* eslint-disable-next-line compat/compat */\nconst symValueOf = hasSymbols && Symbol.prototype.valueOf;\n\nconst toStringOrder = ['toString', 'valueOf'];\nconst toNumberOrder = ['valueOf', 'toString'];\nconst orderLength = 2;\n\nconst assertHint = function assertHint(hint) {\n  if (typeof hint !== 'string' || (hint !== NUMBER && hint !== STRING)) {\n    throw new TypeError('hint must be \"string\" or \"number\"');\n  }\n\n  return hint;\n};\n\n/**\n * @param {*} ordinary - The ordinary to convert.\n * @param {*} hint - The hint.\n * @returns {*} - The primitive.\n */\nconst ordinaryToPrimitive = function ordinaryToPrimitive(ordinary, hint) {\n  requireObjectCoercible(ordinary);\n  assertHint(hint);\n\n  const methodNames = hint === STRING ? toStringOrder : toNumberOrder;\n  for (let i = ZERO; i < orderLength; i += ONE) {\n    const method = ordinary[methodNames[i]];\n\n    if (isFunction(method)) {\n      const result = call(method, ordinary);\n\n      if (isPrimitive(result)) {\n        return result;\n      }\n    }\n  }\n\n  throw new TypeError('No default value');\n};\n\n/**\n * @param {*} object - The object.\n * @param {*} property - The property.\n * @returns {undefined|Function} - The method.\n */\nconst getMethod = function getMethod(object, property) {\n  const func = object[property];\n\n  if (isNil(func) === false) {\n    if (isFunction(func) === false) {\n      throw new TypeError(`${func} returned for property ${property} of object ${object} is not a function`);\n    }\n\n    return func;\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * Get the hint.\n *\n * @param {*} value - The value to compare.\n * @param {boolean} supplied - Was a value supplied.\n * @returns {string} - The hint string.\n */\nconst getHint = function getHint(value, supplied) {\n  if (supplied) {\n    if (value === StringCtr) {\n      return STRING;\n    }\n\n    if (value === NumberCtr) {\n      return NUMBER;\n    }\n  }\n\n  return DEFAULT;\n};\n\n/**\n * Get the primitive from the exotic.\n *\n * @param {*} value - The exotic.\n * @returns {*} - The primitive.\n */\nconst getExoticToPrim = function getExoticToPrim(value) {\n  if (hasSymbols) {\n    if (symToPrimitive) {\n      return getMethod(value, symToPrimitive);\n    }\n\n    if (isSymbol(value)) {\n      return symValueOf;\n    }\n  }\n\n  return UNDEFINED;\n};\n\nconst evalExotic = function evalExotic(obj) {\n  const {exoticToPrim, input, hint} = obj;\n  const result = call(exoticToPrim, input, [hint]);\n\n  if (isPrimitive(result)) {\n    return result;\n  }\n\n  throw new TypeError('unable to convert exotic object to primitive');\n};\n\nconst evalPrimitive = function evalPrimitive(input, hint) {\n  const newHint = hint === DEFAULT && (isDate(input) || isSymbol(input)) ? STRING : hint;\n\n  return ordinaryToPrimitive(input, newHint === DEFAULT ? NUMBER : newHint);\n};\n\n/**\n * This method converts a JavaScript object to a primitive value.\n * Note: When toPrimitive is called with no hint, then it generally behaves as\n * if the hint were Number. However, objects may over-ride this behaviour by\n * defining a @@toPrimitive method. Of the objects defined in this specification\n * only Date objects (see 20.3.4.45) and Symbol objects (see 19.4.3.4) over-ride\n * the default ToPrimitive behaviour. Date objects treat no hint as if the hint\n * were String.\n *\n * @param {*} input - The input to convert.\n * @param {Function} [preferredType] - The preferred type (String or Number).\n * @throws {TypeError} If unable to convert input to a primitive.\n * @returns {string|number} The converted input as a primitive.\n * @see {http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive}\n */\nconst toPrimitive = function toPrimitive(input, preferredType) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  const hint = getHint(preferredType, arguments.length > ONE);\n  const exoticToPrim = getExoticToPrim(input);\n\n  return typeof exoticToPrim === 'undefined' ? evalPrimitive(input, hint) : evalExotic({exoticToPrim, input, hint});\n};\n\nexport default toPrimitive;\n","import hasSymbols from 'has-symbol-support-x';\nimport toPrimitive from 'to-primitive-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method Converts argument to a value that can be used as a property key.\n *\n * @param {*} argument - The argument to convert to a property key.\n * @throws {TypeError} If argument is not a symbol and is not coercible to a string.\n * @returns {string|symbol} The converted argument.\n */\nconst toPropertyKey = function toPropertyKey(argument) {\n  const key = toPrimitive(argument, String);\n\n  return hasSymbols && typeof key === 'symbol' ? key : toStr(key);\n};\n\nexport default toPropertyKey;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport has from 'has-own-property-x';\nimport isFunction from 'is-function-x';\nimport assertIsObject from 'assert-is-object-x';\nimport toBoolean from 'to-boolean-x';\nimport methodize from 'simple-methodize-x';\n\nconst ObjectCtr = {}.constructor;\nconst nd = ObjectCtr.defineProperty;\nconst nativeDefProp = typeof nd === 'function' && nd;\nlet definePropertyFallback;\n\nconst toPropertyDescriptor = function toPropertyDescriptor(desc) {\n  const object = toObject(desc);\n  const descriptor = {};\n\n  if (has(object, 'enumerable')) {\n    descriptor.enumerable = toBoolean(object.enumerable);\n  }\n\n  if (has(object, 'configurable')) {\n    descriptor.configurable = toBoolean(object.configurable);\n  }\n\n  if (has(object, 'value')) {\n    descriptor.value = object.value;\n  }\n\n  if (has(object, 'writable')) {\n    descriptor.writable = toBoolean(object.writable);\n  }\n\n  if (has(object, 'get')) {\n    const getter = object.get;\n\n    if (typeof getter !== 'undefined' && isFunction(getter) === false) {\n      throw new TypeError('getter must be a function');\n    }\n\n    descriptor.get = getter;\n  }\n\n  if (has(object, 'set')) {\n    const setter = object.set;\n\n    if (typeof setter !== 'undefined' && isFunction(setter) === false) {\n      throw new TypeError('setter must be a function');\n    }\n\n    descriptor.set = setter;\n  }\n\n  if ((has(descriptor, 'get') || has(descriptor, 'set')) && (has(descriptor, 'value') || has(descriptor, 'writable'))) {\n    throw new TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n  }\n\n  return descriptor;\n};\n\n// ES5 15.2.3.6\n// http://es5.github.com/#x15.2.3.6\n\n// Patch for WebKit and IE8 standard mode\n// Designed by hax <hax.github.com>\n// related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n// IE8 Reference:\n//     http://msdn.microsoft.com/en-us/library/dd282900.aspx\n//     http://msdn.microsoft.com/en-us/library/dd229916.aspx\n// WebKit Bugs:\n//     https://bugs.webkit.org/show_bug.cgi?id=36423\n\nconst prototypeOfObject = ObjectCtr.prototype;\n// If JS engine supports accessors creating shortcuts.\nconst supportsAccessors = has(prototypeOfObject, '__defineGetter__');\n/* eslint-disable-next-line no-underscore-dangle,no-restricted-properties */\nconst defineGetter = supportsAccessors && methodize(prototypeOfObject.__defineGetter__);\n/* eslint-disable-next-line no-underscore-dangle,no-restricted-properties */\nconst defineSetter = supportsAccessors && methodize(prototypeOfObject.__defineSetter__);\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupGetter = supportsAccessors && methodize(prototypeOfObject.__lookupGetter__);\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupSetter = supportsAccessors && methodize(prototypeOfObject.__lookupSetter__);\n\nexport const implementation = function defineProperty(object, property, descriptor) {\n  assertIsObject(object);\n  const propKey = toPropertyKey(property);\n  const propDesc = toPropertyDescriptor(descriptor);\n\n  // make a valiant attempt to use the real defineProperty for IE8's DOM elements.\n  if (definePropertyFallback) {\n    const result = attempt(function attemptee() {\n      return definePropertyFallback(ObjectCtr, object, propKey, propDesc);\n    });\n\n    if (result.threw === false) {\n      return result.value;\n    }\n    // try the shim if the real one doesn't work\n  }\n\n  // If it's a data property.\n  if (has(propDesc, 'value')) {\n    // fail silently if 'writable', 'enumerable', or 'configurable' are requested but not supported\n    if (supportsAccessors && (lookupGetter(object, propKey) || lookupSetter(object, propKey))) {\n      // As accessors are supported only on engines implementing\n      // `__proto__` we can safely override `__proto__` while defining\n      // a property to make sure that we don't hit an inherited accessor.\n      /* eslint-disable-next-line no-proto */\n      const prototype = object.__proto__;\n      /* eslint-disable-next-line no-proto */\n      object.__proto__ = prototypeOfObject;\n      // Deleting a property anyway since getter / setter may be defined on object itself.\n      delete object[propKey];\n      object[propKey] = propDesc.value;\n      // Setting original `__proto__` back now.\n      /* eslint-disable-next-line no-proto */\n      object.__proto__ = prototype;\n    } else {\n      object[propKey] = propDesc.value;\n    }\n  } else {\n    if (supportsAccessors === false && (propDesc.get || propDesc.set)) {\n      throw new TypeError('getters & setters can not be defined on this javascript engine');\n    }\n\n    // If we got that far then getters and setters can be defined !!\n    if (propDesc.get) {\n      defineGetter(object, propKey, propDesc.get);\n    }\n\n    if (propDesc.set) {\n      defineSetter(object, propKey, propDesc.set);\n    }\n  }\n\n  return object;\n};\n\n/**\n * This method defines a new property directly on an object, or modifies an\n * existing property on an object, and returns the object.\n *\n * @param {object} object - The object on which to define the property.\n * @param {string} property - The name of the property to be defined or modified.\n * @param {object} descriptor - The descriptor for the property being defined or modified.\n * @returns {object} The object that was passed to the function.\n * });.\n */\nlet $defineProperty;\n\n// check whether defineProperty works if it's given. Otherwise, shim partially.\nif (nativeDefProp) {\n  const testWorksWith = function testWorksWith(object) {\n    const testResult = attempt(nativeDefProp, object, 'sentinel', {});\n\n    return testResult.threw === false && testResult.value === object && 'sentinel' in object;\n  };\n\n  const doc = typeof document !== 'undefined' && document;\n\n  if (testWorksWith({}) && (toBoolean(doc) === false || testWorksWith(doc.createElement('div')))) {\n    $defineProperty = function defineProperty(object, property, descriptor) {\n      return nativeDefProp(assertIsObject(object), toPropertyKey(property), toPropertyDescriptor(descriptor));\n    };\n  } else {\n    definePropertyFallback = nativeDefProp;\n  }\n}\n\nif (toBoolean(nativeDefProp) === false || definePropertyFallback) {\n  $defineProperty = implementation;\n}\n\nconst defProp = $defineProperty;\n\nexport default defProp;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport methodize from 'simple-methodize-x';\n\nconst hop = methodize({}.hasOwnProperty);\n\n/**\n * The `hasOwnProperty` method returns a boolean indicating whether\n * the `object` has the specified `property`. Does not attempt to fix known\n * issues in older browsers, but does ES6ify the method.\n *\n * @param {!object} object - The object to test.\n * @throws {TypeError} If object is null or undefined.\n * @param {string|number|symbol} property - The name or Symbol of the property to test.\n * @returns {boolean} `true` if the property is set on `object`, else `false`.\n */\nconst hasOwnProperty = function hasOwnProperty(object, property) {\n  return hop(toObject(object), toPropertyKey(property));\n};\n\nexport default hasOwnProperty;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/* eslint-disable-next-line compat/compat */\nconst pToString = hasSymbols && Symbol.prototype.toString;\nconst isSymbolFn = typeof pToString === 'function' && isSymbol;\n/** @type {Function} */\nconst castString = ''.constructor;\n\n/**\n * The abstract operation ToString converts argument to a value of type String,\n * however the specification states that if the argument is a Symbol then a\n * 'TypeError' is thrown. This version also allows Symbols be converted to\n * a string. Other uncoercible exotics will still throw though.\n *\n * @param {*} [value] - The value to convert to a string.\n * @returns {string} The converted value.\n */\nconst toStringSymbolsSupported = function toStringSymbolsSupported(value) {\n  return isSymbolFn && isSymbolFn(value) ? pToString.call(value) : castString(value);\n};\n\nexport default toStringSymbolsSupported;\n","import safeToString from 'to-string-symbols-supported-x';\nimport isPrimitive from 'is-primitive-x';\n\n/**\n * Tests `value` to see if it is an object, throws a `TypeError` if it is\n * not. Otherwise returns the `value`.\n *\n * @param {*} value - The argument to be tested.\n * @param {string} [message] - An alternative user message.\n * @throws {TypeError} Throws if `value` is not an object.\n * @returns {*} Returns `value` if it is an object.\n */\nconst assertIsObject = function assertIsObject(value, message) {\n  if (isPrimitive(value)) {\n    const msg = arguments.length > 1 ? safeToString(message) : `${safeToString(value)} is not an object`;\n\n    throw new TypeError(msg);\n  }\n\n  return value;\n};\n\nexport default assertIsObject;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport toBoolean from 'to-boolean-x';\nimport all from 'array-all-x';\nimport methodize from 'simple-methodize-x';\nimport call from 'simple-call-x';\n\nconst nfe = [].forEach;\nconst nativeForEach = typeof nfe === 'function' && methodize(nfe);\n\nconst test1 = function test1() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    return nativeForEach([1, 2], function iteratee(item) {\n      spy += item;\n    });\n  });\n\n  return res.threw === false && typeof res.value === 'undefined' && spy === 3;\n};\n\nconst test2 = function test2() {\n  let spy = '';\n  const res = attempt(function attemptee() {\n    return nativeForEach(toObject('abc'), function iteratee(item) {\n      spy += item;\n    });\n  });\n\n  return res.threw === false && typeof res.value === 'undefined' && spy === 'abc';\n};\n\nconst test3 = function test3() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    const args = (function getArgs() {\n      /* eslint-disable-next-line prefer-rest-params */\n      return arguments;\n    })(1, 2, 3);\n\n    return nativeForEach(args, function iteratee(item) {\n      spy += item;\n    });\n  });\n\n  return res.threw === false && typeof res.value === 'undefined' && spy === 6;\n};\n\nconst test4 = function test4() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    return nativeForEach({0: 1, 1: 2, 3: 3, 4: 4, length: 4}, function iteratee(item) {\n      spy += item;\n    });\n  });\n\n  return res.threw === false && typeof res.value === 'undefined' && spy === 6;\n};\n\nconst doc = typeof document !== 'undefined' && document;\n\nconst test5 = function test5() {\n  if (doc) {\n    let spy = null;\n    const fragment = doc.createDocumentFragment();\n    const div = doc.createElement('div');\n    fragment.appendChild(div);\n    const res = attempt(function attemptee() {\n      return nativeForEach(fragment.childNodes, function iteratee(item) {\n        spy = item;\n      });\n    });\n\n    return res.threw === false && typeof res.value === 'undefined' && spy === div;\n  }\n\n  return true;\n};\n\nconst isStrict = (function returnIsStrict() {\n  /* eslint-disable-next-line babel/no-invalid-this */\n  return toBoolean(this) === false;\n})();\n\nconst test6 = function test6() {\n  if (isStrict) {\n    let spy = null;\n\n    const thisTest = function thisTest() {\n      /* eslint-disable-next-line babel/no-invalid-this */\n      spy = typeof this === 'string';\n    };\n\n    const res = attempt(function attemptee() {\n      return nativeForEach([1], thisTest, 'x');\n    });\n\n    return res.threw === false && typeof res.value === 'undefined' && spy === true;\n  }\n\n  return true;\n};\n\nconst test7 = function test7() {\n  const spy = {};\n  const fn =\n    'return nativeForEach(\"foo\", function (_, __, context) {' +\n    'if (toBoolean(context) === false || typeof context !== \"object\") {' +\n    'spy.value = true;}});';\n\n  const res = attempt(function attemptee() {\n    /* eslint-disable-next-line no-new-func */\n    return Function('nativeForEach', 'spy', 'toBoolean', fn)(nativeForEach, spy, toBoolean);\n  });\n\n  return res.threw === false && typeof res.value === 'undefined' && spy.value !== true;\n};\n\nconst isWorking = toBoolean(nativeForEach) && test1() && test2() && test3() && test4() && test5() && test6() && test7();\n\nconst patchedNative = function forEach(array, callBack /* , thisArg */) {\n  /* eslint-disable-next-line prefer-rest-params */\n  return nativeForEach(requireObjectCoercible(array), assertIsFunction(callBack), arguments[2]);\n};\n\nexport const implementation = function forEach(array, callBack /* , thisArg */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n  const iteratee = function iteratee() {\n    /* eslint-disable-next-line prefer-rest-params */\n    const i = arguments[1];\n\n    /* eslint-disable-next-line prefer-rest-params */\n    if (i in arguments[2]) {\n      /* eslint-disable-next-line prefer-rest-params,babel/no-invalid-this */\n      call(callBack, this, [arguments[0], i, object]);\n    }\n  };\n\n  /* eslint-disable-next-line prefer-rest-params */\n  all(object, iteratee, arguments[2]);\n};\n\n/**\n * This method executes a provided function once for each array element.\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to execute for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n */\nconst $forEach = isWorking ? patchedNative : implementation;\n\nexport default $forEach;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport attempt from 'attempt-x';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport owns from 'has-own-property-x';\nimport isPrimitive from 'is-primitive-x';\nimport isString from 'is-string';\nimport isIndex from 'is-index-x';\nimport propertyIsEnumerable from 'property-is-enumerable-x';\nimport toBoolean from 'to-boolean-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst charAt = methodize(EMPTY_STRING.charAt);\nconst ObjectCtr = {}.constructor;\nconst ngopd = ObjectCtr.getOwnPropertyDescriptor;\nconst nativeGOPD = typeof ngopd === 'function' && ngopd;\nlet getOPDFallback1;\nlet getOPDFallback2;\n\n// ES5 15.2.3.3\n// http://es5.github.com/#x15.2.3.3\n\nconst doesGOPDWork = function doesGOPDWork(object, prop) {\n  object[toPropertyKey(prop)] = 0;\n  const testResult = attempt(nativeGOPD, object, prop);\n\n  return testResult.threw === false && testResult.value.value === 0;\n};\n\nconst prototypeOfObject = ObjectCtr.prototype;\n\n// If JS engine supports accessors creating shortcuts.\nconst supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupGetter = supportsAccessors && methodize(prototypeOfObject.__lookupGetter__);\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupSetter = supportsAccessors && methodize(prototypeOfObject.__lookupSetter__);\n\nexport const implementation = function getOwnPropertyDescriptor(object, property) {\n  const obj = toObject(object);\n  const propKey = toPropertyKey(property);\n\n  let result;\n\n  // make a valiant attempt to use the real getOwnPropertyDescriptor for I8's DOM elements.\n  if (getOPDFallback1) {\n    result = attempt(function attemptee() {\n      return getOPDFallback1(toObject(obj), propKey);\n    });\n\n    if (result.threw === false) {\n      return result.value;\n    }\n    // try the shim if the real one doesn't work\n  }\n\n  const isStringIndex = isString(obj) && isIndex(propKey, obj.length);\n\n  if (getOPDFallback2 && isStringIndex === false) {\n    result = attempt(function attemptee() {\n      return getOPDFallback2(toObject(obj), propKey);\n    });\n\n    if (result.threw === false) {\n      return result.value;\n    }\n    // try the shim if the real one doesn't work\n  }\n\n  /* eslint-disable-next-line no-void */\n  let descriptor = void 0;\n\n  // If object does not owns property return undefined immediately.\n  if (isStringIndex === false && owns(obj, propKey) === false) {\n    return descriptor;\n  }\n\n  // If object has a property then it's for sure `configurable`, and\n  // probably `enumerable`. Detect enumerability though.\n  descriptor = {\n    configurable: isPrimitive(object) === false && isStringIndex === false,\n    enumerable: propertyIsEnumerable(obj, propKey),\n  };\n\n  // If JS engine supports accessor properties then property may be a\n  // getter or setter.\n  if (supportsAccessors) {\n    // Unfortunately `__lookupGetter__` will return a getter even\n    // if object has own non getter property along with a same named\n    // inherited getter. To avoid misbehavior we temporary remove\n    // `__proto__` so that `__lookupGetter__` will return getter only\n    // if it's owned by an object.\n    /* eslint-disable-next-line no-proto */\n    const prototype = obj.__proto__;\n    const notPrototypeOfObject = obj !== prototypeOfObject;\n\n    // avoid recursion problem, breaking in Opera Mini when\n    // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n    // or any other Object.prototype accessor\n    if (notPrototypeOfObject) {\n      /* eslint-disable-next-line no-proto */\n      obj.__proto__ = prototypeOfObject;\n    }\n\n    const getter = lookupGetter(obj, propKey);\n    const setter = lookupSetter(obj, propKey);\n\n    if (notPrototypeOfObject) {\n      // Once we have getter and setter we can put values back.\n      /* eslint-disable-next-line no-proto */\n      obj.__proto__ = prototype;\n    }\n\n    if (getter || setter) {\n      if (getter) {\n        descriptor.get = getter;\n      }\n\n      if (setter) {\n        descriptor.set = setter;\n      }\n\n      // If it was accessor property we're done and return here\n      // in order to avoid adding `value` to the descriptor.\n      return descriptor;\n    }\n  }\n\n  // If we got this far we know that object has an own property that is\n  // not an accessor so we set it as a value and return descriptor.\n  if (isStringIndex) {\n    descriptor.value = charAt(obj, propKey);\n    descriptor.writable = false;\n  } else {\n    descriptor.value = obj[propKey];\n    descriptor.writable = true;\n  }\n\n  return descriptor;\n};\n\n/**\n * This method returns a property descriptor for an own property (that is,\n * one directly present on an object and not in the object's prototype chain)\n * of a given object.\n *\n * @param {*} object - The object in which to look for the property.\n * @param {*} property - The name of the property whose description is to be retrieved.\n * @returns {object} A property descriptor of the given property if it exists on the object, undefined otherwise.\n */\nlet $getOwnPropertyDescriptor;\n\n// check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\nif (nativeGOPD) {\n  const doc = typeof document !== 'undefined' && document;\n  const getOPDWorksOnDom = doc ? doesGOPDWork(doc.createElement('div'), 'sentinel') : true;\n\n  if (getOPDWorksOnDom) {\n    const res = attempt(nativeGOPD, toObject('abc'), 1);\n    const worksWithStr = res.threw === false && res.value && res.value.value === 'b';\n\n    if (worksWithStr) {\n      const getOPDWorksOnObject = doesGOPDWork({}, 'sentinel');\n\n      if (getOPDWorksOnObject) {\n        const worksWithPrim = attempt(nativeGOPD, 42, 'name').threw === false;\n        /* eslint-disable-next-line compat/compat */\n        const worksWithObjSym = hasSymbolSupport && doesGOPDWork({}, toObject(Symbol(EMPTY_STRING)));\n\n        if (worksWithObjSym) {\n          if (worksWithPrim) {\n            $getOwnPropertyDescriptor = nativeGOPD;\n          } else {\n            $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n              return nativeGOPD(toObject(object), property);\n            };\n          }\n        } else if (worksWithPrim) {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(object, toPropertyKey(property));\n          };\n        } else {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(toObject(object), toPropertyKey(property));\n          };\n        }\n      } else {\n        getOPDFallback1 = nativeGOPD;\n      }\n    } else {\n      getOPDFallback2 = nativeGOPD;\n    }\n  }\n}\n\nif (toBoolean($getOwnPropertyDescriptor) === false || getOPDFallback1 || getOPDFallback2) {\n  $getOwnPropertyDescriptor = implementation;\n}\n\nconst gOPS = $getOwnPropertyDescriptor;\n\nexport default gOPS;\n","import isFunction from 'is-function-x';\nimport safeToString from 'to-string-symbols-supported-x';\nimport isPrimitive from 'is-primitive-x';\n\n/**\n * Tests `callback` to see if it is a function, throws a `TypeError` if it is\n * not. Otherwise returns the `callback`.\n *\n * @param {*} callback - The argument to be tested.\n * @param {string} [message] - An alternative user message.\n * @throws {TypeError} Throws if `callback` is not a function.\n * @returns {*} Returns `callback` if it is function.\n */\nconst assertIsFunction = function assertIsFunction(callback, message) {\n  if (isFunction(callback) === false) {\n    const msg =\n      arguments.length > 1\n        ? safeToString(message)\n        : `${isPrimitive(callback) ? safeToString(callback) : '#<Object>'} is not a function`;\n\n    throw new TypeError(msg);\n  }\n\n  return callback;\n};\n\nexport default assertIsFunction;\n","import NAN from 'nan-x';\nimport toStr from 'to-string-x';\nimport trimLeft from 'trim-left-x';\nimport methodize from 'simple-methodize-x';\n\nconst nativeParseInt = parseInt;\n/**  @type {Function} */\nconst castNumber = (0).constructor;\nconst BAD_CHAR = '\\u180E';\nconst methodizedCharAt = methodize(BAD_CHAR.charAt);\nconst hexRegex = /^[-+]?0[xX]/;\nconst methodizedTest = methodize(hexRegex.test);\n\n/**\n * This method parses a string argument and returns an integer of the specified\n * radix (the base in mathematical numeral systems). (ES2019).\n *\n * @param {string} [string] - The value to parse. If the string argument is not a\n *  string, then it is converted to a string (using the ToString abstract\n *  operation). Leading whitespace in the string argument is ignored.\n * @param {number} [radix] - An integer between 2 and 36 that represents the radix\n *  (the base in mathematical numeral systems) of the above mentioned string.\n *  Specify 10 for the decimal numeral system commonly used by humans. Always\n *  specify this parameter to eliminate reader confusion and to guarantee\n *  predictable behavior. Different implementations produce different results\n *  when a radix is not specified, usually defaulting the value to 10.\n * @throws {TypeError} If target is a Symbol or is not coercible.\n * @returns {number} An integer number parsed from the given string. If the first\n *  character cannot be converted to a number, NaN is returned.\n */\nconst $parseInt = function $parseInt(string, radix) {\n  const str = trimLeft(toStr(string));\n\n  if (methodizedCharAt(str, 0) === BAD_CHAR) {\n    return NAN;\n  }\n\n  return nativeParseInt(str, castNumber(radix) || (methodizedTest(hexRegex, str) ? 16 : 10));\n};\n\nexport default $parseInt;\n","/**\n * The constant NaN derived mathematically by 0 / 0.\n *\n * @type number\n */\nconst constantNAN = 0 / 0;\n\nexport default constantNAN;\n","import isSymbol from 'is-symbol';\nimport toPrimitive from 'to-primitive-x';\nimport trim from 'trim-x';\nimport $parseInt from 'parse-int-x';\nimport NAN from 'nan-x';\nimport methodize from 'simple-methodize-x';\n\nconst binaryRadix = 2;\nconst octalRadix = 8;\nconst testCharsCount = 2;\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a number';\n\nconst castNumber = testCharsCount.constructor;\nconst methodizedStringSlice = methodize(ERROR_MESSAGE.slice);\n\nconst binaryRegex = /^0b[01]+$/i;\nconst RegExpConstructor = binaryRegex.constructor;\n// Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is\n// an own property of regexes. wtf.\nconst methodizedTest = methodize(binaryRegex.test);\nconst isBinary = function isBinary(value) {\n  return methodizedTest(binaryRegex, value);\n};\n\nconst octalRegex = /^0o[0-7]+$/i;\nconst isOctal = function isOctal(value) {\n  return methodizedTest(octalRegex, value);\n};\n\nconst nonWSregex = new RegExpConstructor('[\\u0085\\u180e\\u200b\\ufffe]', 'g');\nconst hasNonWS = function hasNonWS(value) {\n  return methodizedTest(nonWSregex, value);\n};\n\nconst invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nconst isInvalidHexLiteral = function isInvalidHexLiteral(value) {\n  return methodizedTest(invalidHexLiteral, value);\n};\n\nconst assertNotSymbol = function assertNotSymbol(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return value;\n};\n\nconst parseBase = function parseBase(value, radix) {\n  return $parseInt(methodizedStringSlice(value, testCharsCount), radix);\n};\n\nconst parseString = function parseString(toNum, value) {\n  if (isBinary(value)) {\n    return toNum(parseBase(value, binaryRadix));\n  }\n\n  if (isOctal(value)) {\n    return toNum(parseBase(value, octalRadix));\n  }\n\n  return null;\n};\n\nconst convertString = function convertString(toNum, value) {\n  const val = parseString(toNum, value);\n\n  if (val !== null) {\n    return val;\n  }\n\n  if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n    return NAN;\n  }\n\n  const trimmed = trim(value);\n\n  if (trimmed !== value) {\n    return toNum(trimmed);\n  }\n\n  return null;\n};\n\n/**\n * This method converts argument to a value of type Number. (ES2019).\n *\n * @param {*} [argument] - The argument to convert to a number.\n * @throws {TypeError} - If argument is a Symbol or not coercible.\n * @returns {*} The argument converted to a number.\n */\nconst toNumber = function toNumber(argument) {\n  const value = assertNotSymbol(toPrimitive(argument, castNumber));\n\n  if (typeof value === 'string') {\n    const val = convertString(toNumber, value);\n\n    if (val !== null) {\n      return val;\n    }\n  }\n\n  return castNumber(value);\n};\n\nexport default toNumber;\n","/**\n * This method determines whether the passed value is NaN and its type is\n * `Number`. It is a more robust version of the original, global isNaN().\n *\n * @param {*} [value] - The value to be tested for NaN.\n * @returns {boolean} `true` if the given value is NaN and its type is Number;\n *  otherwise, `false`.\n */\nconst isNaN = function isNaN(value) {\n  /* eslint-disable-next-line no-self-compare */\n  return value !== value;\n};\n\nexport default isNaN;\n","import numberIsNaN from 'is-nan-x';\nimport INFINITY from 'infinity-x';\n\n/**\n * This method determines whether the passed value is a finite number.\n *\n * @param {*} [number] - The value to be tested for finiteness.\n * @returns {boolean} A Boolean indicating whether or not the given value is a finite number.\n */\nconst isFinite = function isFinite(number) {\n  return typeof number === 'number' && numberIsNaN(number) === false && number !== INFINITY && number !== -INFINITY;\n};\n\nexport default isFinite;\n","/**\n * The constant value Infinity derived mathematically by 1 / 0.\n *\n * @type number\n */\nconst constantInfinity = 1 / 0;\n\nexport default constantInfinity;\n","import toNumber from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\n\n/**\n * This method returns the sign of a number, indicating whether the number is positive,\n * negative or zero. (ES2019).\n *\n * @param {*} x - A number.\n * @returns {number} A number representing the sign of the given argument. If the argument\n * is a positive number, negative number, positive zero or negative zero, the function will\n * return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n */\nconst sign = function sign(x) {\n  const n = toNumber(x);\n\n  if (n === 0 || numberIsNaN(n)) {\n    return n;\n  }\n\n  return n > 0 ? 1 : -1;\n};\n\nexport default sign;\n","import toNumber from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\nimport numberIsFinite from 'is-finite-x';\nimport mathSign from 'math-sign-x';\n\nconst {abs, floor} = Math;\n\n/**\n * Converts `value` to an integer. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toInteger = function toInteger(value) {\n  const number = toNumber(value);\n\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return mathSign(number) * floor(abs(number));\n};\n\nexport default toInteger;\n","import toInteger from 'to-integer-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toLength = function toLength(value) {\n  const len = toInteger(value);\n\n  // includes converting -0 to +0\n  if (len <= 0) {\n    return 0;\n  }\n\n  if (len > MAX_SAFE_INTEGER) {\n    return MAX_SAFE_INTEGER;\n  }\n\n  return len;\n};\n\nexport default toLength;\n","import hasBoxed from 'has-boxed-string-x';\nimport isString from 'is-string';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst strSplit = methodize(EMPTY_STRING.split);\n\nconst identity = function splitIfBoxedBug(value) {\n  return value;\n};\n\nexport const implementation = function splitIfBoxedBug(value) {\n  return isString(value) ? strSplit(value, EMPTY_STRING) : identity(value);\n};\n\n/**\n * This method tests if a value is a string with the boxed bug; splits to an\n * array for iteration; otherwise returns the original value.\n *\n * @param {*} [value] - The value to be tested.\n * @returns {*} An array or characters if value was a string with the boxed bug;\n *  otherwise the value.\n */\nconst $splitIfBoxedBug = hasBoxed ? identity : implementation;\n\nexport default $splitIfBoxedBug;\n","import toObject from 'to-object-x';\nimport toLength from 'to-length-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport call from 'simple-call-x';\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method tests whether some element in the array passes the test\n * implemented by the provided function.\n *\n * @function any\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to test for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n * @returns {boolean} `true` if the callback function returns a truthy value for\n *  any array element; otherwise, `false`.\n */\n// eslint-enable jsdoc/check-param-names\nconst any = function any(array, callBack /* , thisArg */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n  const iterable = splitIfBoxedBug(object);\n  const length = toLength(iterable.length);\n\n  if (length) {\n    /* eslint-disable-next-line prefer-rest-params */\n    const thisArg = arguments[2];\n    for (let index = 0; index < length; index += 1) {\n      if (call(callBack, thisArg, [iterable[index], index, object])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nexport default any;\n","import any from 'array-any-x';\nimport call from 'simple-call-x';\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method executes a provided function once for each array element.\n *\n * @function all\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to execute for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n */\n// eslint-enable jsdoc/check-param-names\nconst all = function all(array, callBack /* , thisArg */) {\n  any(\n    array,\n    function iteratee() {\n      /* eslint-disable-next-line prefer-rest-params,babel/no-invalid-this */\n      call(callBack, this, arguments);\n    },\n    /* eslint-disable-next-line prefer-rest-params */\n    arguments[2],\n  );\n};\n\nexport default all;\n","import attempt from 'attempt-x';\nimport toStringTag from 'to-string-tag-x';\n\nconst nia = [].isArray;\nconst nativeIsArray = typeof nia === 'function' && nia;\n\nconst testResult = attempt(function attemptee() {\n  return nativeIsArray([]) === true && nativeIsArray({length: 0}) === false;\n});\n\nconst isWorking = testResult.threw === false && testResult.value === true;\n\nexport const implementation = function isArray(value) {\n  return toStringTag(value) === '[object Array]';\n};\n\n/**\n * Determines whether the passed value is an Array.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} - True if an array; otherwise false.\n */\nconst isArray = isWorking ? nativeIsArray : implementation;\n\nexport default isArray;\n","import toObject from 'to-object-x';\nimport toInteger from 'to-integer-x';\nimport toLength from 'to-length-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\n\nconst getMax = function getMax(a, b) {\n  return a >= b ? a : b;\n};\n\nconst getMin = function getMin(a, b) {\n  return a <= b ? a : b;\n};\n\nconst setRelative = function setRelative(value, length) {\n  return value < 0 ? getMax(length + value, 0) : getMin(value, length);\n};\n\n/**\n * The slice() method returns a shallow copy of a portion of an array into a new\n * array object selected from begin to end (end not included). The original\n * array will not be modified.\n *\n * @param {!object} arrayLike - The array like object to slice.\n * @param {number} [start] - Zero-based index at which to begin extraction.\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(-2) extracts the last two elements in the sequence.\n *  If begin is undefined, slice begins from index 0.\n * @param {number} [end] - Zero-based index before which to end extraction.\n *  Slice extracts up to but not including end. For example, slice([0,1,2,3,4],1,4)\n *  extracts the second element through the fourth element (elements indexed\n *  1, 2, and 3).\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(2,-1) extracts the third element through the second-to-last\n *  element in the sequence.\n *  If end is omitted, slice extracts through the end of the sequence (arr.length).\n *  If end is greater than the length of the sequence, slice extracts through\n *  the end of the sequence (arr.length).\n * @returns {Array} A new array containing the extracted elements.\n */\nconst slice = function slice(arrayLike, start, end) {\n  const iterable = splitIfBoxedBug(toObject(arrayLike));\n  const length = toLength(iterable.length);\n  let k = setRelative(toInteger(start), length);\n  const relativeEnd = typeof end === 'undefined' ? length : toInteger(end);\n  const finalEnd = setRelative(relativeEnd, length);\n  const val = [];\n  val.length = getMax(finalEnd - k, 0);\n  let next = 0;\n  while (k < finalEnd) {\n    if (k in iterable) {\n      val[next] = iterable[k];\n    }\n\n    next += 1;\n    k += 1;\n  }\n\n  return val;\n};\n\nexport default slice;\n","import isFunction from 'is-function-x';\nimport isPrimitive from 'is-primitive-x';\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not a\n * primitive and not a function.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nconst isObjectLike = function isObjectLike(value) {\n  return isPrimitive(value) === false && isFunction(value, true) === false;\n};\n\nexport default isObjectLike;\n","import toNumber from 'to-number-x';\n\nconst getMaxMin = function getMaxMin(args) {\n  const minVal = toNumber(args[1]);\n  const result = args.length < 3 ? {max: minVal, min: 0} : {max: toNumber(args[2]), min: minVal};\n\n  if (result.min > result.max) {\n    throw new RangeError('\"min\" must be less than \"max\"');\n  }\n\n  return result;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method clamp a number to min and max limits inclusive.\n *\n * @param {number} value - The number to be clamped.\n * @param {number} [min=0] - The minimum number.\n * @param {number} max - The maximum number.\n * @throws {RangeError} If min > max.\n * @returns {number} The clamped number.\n */\n// eslint-enable jsdoc/check-param-names\nconst clamp = function clamp(value) {\n  const number = toNumber(value);\n\n  if (arguments.length < 2) {\n    return number;\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  const {max, min} = getMaxMin(arguments);\n\n  if (number < min) {\n    return min;\n  }\n\n  if (number > max) {\n    return max;\n  }\n\n  return number;\n};\n\nexport default clamp;\n","import safeToString from 'to-string-symbols-supported-x';\nimport toInteger from 'to-integer-x';\nimport toNumber from 'to-number-x';\nimport mathClamp from 'math-clamp-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\nconst rxTest = reIsUint.test;\n\n/**\n * This method determines whether the passed value is a zero based index.\n * JavaScript arrays are zero-indexed: the first element of an array is at\n * index 0, and the last element is at the index equal to the value of the\n * array's length property minus 1.\n *\n * @param {number|string} value - The value to be tested for being a zero based index.\n * @param {number} [length=MAX_SAFE_INTEGER] - The length that sets the upper bound.\n * @returns {boolean} A Boolean indicating whether or not the given value is a\n * zero based index within bounds.\n */\nconst isIndex = function isIndex(value, length) {\n  const string = safeToString(value);\n\n  if (rxTest.call(reIsUint, string) === false) {\n    return false;\n  }\n\n  const number = toNumber(string);\n\n  if (arguments.length > 1) {\n    return number < mathClamp(toInteger(length), MAX_SAFE_INTEGER);\n  }\n\n  return number < MAX_SAFE_INTEGER;\n};\n\nexport default isIndex;\n","import toPropertyKey from 'to-property-key-x';\nimport toObject from 'to-object-x';\nimport methodize from 'simple-methodize-x';\n\nconst propIsEnumerable = methodize({}.propertyIsEnumerable);\n\n/**\n * This method returns a Boolean indicating whether the specified property is\n * enumerable. Does not attempt to fix bugs in IE<9 or old Opera, otherwise it\n * does ES6ify the method.\n *\n * @param {!object} object - The object on which to test the property.\n * @param {string|symbol} property - The name of the property to test.\n * @throws {TypeError} If target is null or undefined.\n * @returns {boolean} A Boolean indicating whether the specified property is\n *  enumerable.\n */\nconst propertyIsEnumerable = function propertyIsEnumerable(object, property) {\n  return propIsEnumerable(toObject(object), toPropertyKey(property));\n};\n\nexport default propertyIsEnumerable;\n","import toObject from 'to-object-x';\nimport attempt from 'attempt-x';\nimport isArray from 'is-array-x';\nimport isArguments from 'is-arguments';\nimport arraySlice from 'array-like-slice-x';\nimport splitIfBoxed from 'split-if-boxed-bug-x';\nimport isString from 'is-string';\nimport isRegexp from 'is-regexp-x';\nimport has from 'has-own-property-x';\nimport objKeys from 'object-keys';\n\nconst ObjectCtr = {}.constructor;\nconst nativeKeys = typeof ObjectCtr.keys === 'function' && ObjectCtr.keys;\n\nlet isWorking;\nlet throwsWithNull;\nlet worksWithPrim;\nlet worksWithRegex;\nlet worksWithArgs;\nlet worksWithStr;\n\nif (nativeKeys) {\n  const isCorrectRes = function isCorrectRes(r, length) {\n    return r.threw === false && isArray(r.value) && r.value.length === length;\n  };\n\n  const either = function either(r, a, b) {\n    const x = r.value[0];\n    const y = r.value[1];\n\n    return (x === a && y === b) || (x === b && y === a);\n  };\n\n  let testObj = {a: 1, b: 2};\n  let res = attempt(nativeKeys, testObj);\n  isWorking = isCorrectRes(res, 2) && either(res, 'a', 'b');\n\n  if (isWorking) {\n    testObj = Object('a');\n    testObj.y = 1;\n    res = attempt(nativeKeys, testObj);\n    isWorking = isCorrectRes(res, 2) && either(res, '0', 'y');\n  }\n\n  if (isWorking) {\n    throwsWithNull = attempt(nativeKeys, null).threw;\n    worksWithPrim = isCorrectRes(attempt(nativeKeys, 42), 0);\n    worksWithRegex = attempt(nativeKeys, /a/g).threw === false;\n\n    res = attempt(\n      nativeKeys,\n      (function getArgs() {\n        /* eslint-disable-next-line prefer-rest-params */\n        return arguments;\n      })(1, 2),\n    );\n\n    worksWithArgs = isCorrectRes(res, 2) && either(res, '0', '1');\n\n    res = attempt(nativeKeys, Object('ab'));\n    worksWithStr = isCorrectRes(res, 2) && either(res, '0', '1');\n  }\n}\n\nexport const patched = function keys(object) {\n  let obj = toObject ? toObject(object) : object;\n\n  if (worksWithArgs !== true && isArguments(obj)) {\n    obj = arraySlice(obj);\n  } else if (worksWithStr !== true && isString(obj)) {\n    obj = splitIfBoxed(obj);\n  } else if (worksWithRegex !== true && isRegexp(obj)) {\n    const regexKeys = [];\n    /* eslint-disable-next-line no-restricted-syntax */\n    for (const key in obj) {\n      // noinspection JSUnfilteredForInLoop\n      if (has(obj, key)) {\n        regexKeys[regexKeys.length] = key;\n      }\n    }\n\n    return regexKeys;\n  }\n\n  return nativeKeys(obj);\n};\n\nexport const implementation = function keys(object) {\n  return objKeys(toObject(object));\n};\n\nlet objectKeys;\n\nif (isWorking) {\n  if (throwsWithNull && worksWithPrim && worksWithRegex && worksWithArgs && worksWithStr) {\n    objectKeys = nativeKeys;\n  } else {\n    objectKeys = patched;\n  }\n}\n\n/**\n * This method returns an array of a given object's own enumerable properties,\n * in the same order as that provided by a for...in loop (the difference being\n * that a for-in loop enumerates properties in the prototype chain as well).\n *\n * @param {*} obj - The object of which the enumerable own properties are to be returned.\n * @returns {Array} An array of strings that represent all the enumerable properties of the given object.\n */\nconst $objectKeys = isWorking ? objectKeys : implementation;\n\nexport default $objectKeys;\n","import isObjectLike from 'is-object-like-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport has from 'has-own-property-x';\nimport gOPD from 'object-get-own-property-descriptor-x';\nimport defineProperty from 'object-define-property-x';\nimport toStringTag from 'to-string-tag-x';\nimport methodize from 'simple-methodize-x';\n\nconst regexExec = methodize(/none/.exec);\nconst regexClass = '[object RegExp]';\n\nconst tryRegexExecCall = function tryRegexExec(value, descriptor) {\n  try {\n    value.lastIndex = 0;\n    regexExec(value);\n\n    return true;\n  } catch (e) {\n    return false;\n  } finally {\n    defineProperty(value, 'lastIndex', descriptor);\n  }\n};\n\n/**\n * This method tests if a value is a regex.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} `true` if value is a regex; otherwise `false`.\n */\nconst isRegex = function isRegex(value) {\n  if (isObjectLike(value) === false) {\n    return false;\n  }\n\n  if (hasToStringTag === false) {\n    return toStringTag(value) === regexClass;\n  }\n\n  const descriptor = gOPD(value, 'lastIndex');\n  const hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\n  if (hasLastIndexDataProperty !== true) {\n    return false;\n  }\n\n  return tryRegexExecCall(value, descriptor);\n};\n\nexport default isRegex;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport all from 'array-all-x';\nimport toBoolean from 'to-boolean-x';\nimport methodize from 'simple-methodize-x';\nimport call from 'simple-call-x';\n\nconst nf = [].filter;\nconst nativeFilter = typeof nf === 'function' && methodize(nf);\n\nconst test1 = function test1() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    return nativeFilter([1, 2], function spyAdd1(item) {\n      spy += item;\n\n      return false;\n    });\n  });\n\n  return res.threw === false && res.value && res.value.length === 0 && spy === 3;\n};\n\nconst test2 = function test2() {\n  let spy = '';\n  const res = attempt(function attemptee() {\n    return nativeFilter(toObject('abc'), function spyAdd2(item, index) {\n      spy += item;\n\n      return index === 1;\n    });\n  });\n\n  return res.threw === false && res.value && res.value.length === 1 && res.value[0] === 'b' && spy === 'abc';\n};\n\nconst test3 = function test3() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    const args = (function getArgs() {\n      /* eslint-disable-next-line prefer-rest-params */\n      return arguments;\n    })(1, 2, 3);\n\n    return nativeFilter(args, function spyAdd3(item, index) {\n      spy += item;\n\n      return index === 2;\n    });\n  });\n\n  return res.threw === false && res.value && res.value.length === 1 && res.value[0] === 3 && spy === 6;\n};\n\nconst test4 = function test4() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    return nativeFilter({0: 1, 1: 2, 3: 3, 4: 4, length: 4}, function spyAdd4(item) {\n      spy += item;\n\n      return false;\n    });\n  });\n\n  return res.threw === false && res.value && res.value.length === 0 && spy === 6;\n};\n\nconst getTest5Result = function getTest5Result(args) {\n  const [res, div, spy] = args;\n\n  return res.threw === false && res.value && res.value.length === 1 && res.value[0] === div && spy === div;\n};\n\nconst doc = typeof document !== 'undefined' && document;\n\nconst test5 = function test5() {\n  if (doc) {\n    let spy = null;\n    const fragment = doc.createDocumentFragment();\n    const div = doc.createElement('div');\n    fragment.appendChild(div);\n    const res = attempt(function attemptee() {\n      return nativeFilter(fragment.childNodes, function spyAssign(item) {\n        spy = item;\n\n        return item;\n      });\n    });\n\n    return getTest5Result([res, div, spy]);\n  }\n\n  return true;\n};\n\nconst isStrict = (function returnIsStrict() {\n  /* eslint-disable-next-line babel/no-invalid-this */\n  return toBoolean(this) === false;\n})();\n\nconst test6 = function test6() {\n  if (isStrict) {\n    let spy = null;\n\n    const testThis = function testThis() {\n      /* eslint-disable-next-line babel/no-invalid-this */\n      spy = typeof this === 'string';\n    };\n\n    const res = attempt(function attemptee() {\n      return nativeFilter([1], testThis, 'x');\n    });\n\n    return res.threw === false && res.value && res.value.length === 0 && spy === true;\n  }\n\n  return true;\n};\n\nconst test7 = function test7() {\n  const spy = {};\n  const fn =\n    'return nativeFilter(\"foo\", function (_, __, context) {' +\n    'if (castBoolean(context) === false || typeof context !== \"object\") {' +\n    'spy.value = true;}});';\n\n  const res = attempt(function attemptee() {\n    /* eslint-disable-next-line no-new-func */\n    return Function('nativeFilter', 'spy', 'castBoolean', fn)(nativeFilter, spy, toBoolean);\n  });\n\n  return res.threw === false && res.value && res.value.length === 0 && spy.value !== true;\n};\n\nconst isWorking = toBoolean(nativeFilter) && test1() && test2() && test3() && test4() && test5() && test6() && test7();\n\nconst patchedFilter = function filter(array, callBack /* , thisArg */) {\n  /* eslint-disable-next-line prefer-rest-params, */\n  return nativeFilter(requireObjectCoercible(array), assertIsFunction(callBack), arguments[2]);\n};\n\nexport const implementation = function filter(array, callBack /* , thisArg */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n\n  const result = [];\n\n  const predicate = function predicate() {\n    /* eslint-disable-next-line prefer-rest-params */\n    const i = arguments[1];\n\n    /* eslint-disable-next-line prefer-rest-params */\n    if (i in arguments[2]) {\n      /* eslint-disable-next-line prefer-rest-params */\n      const item = arguments[0];\n\n      /* eslint-disable-next-line babel/no-invalid-this */\n      if (call(callBack, this, [item, i, object])) {\n        result[result.length] = item;\n      }\n    }\n  };\n\n  /* eslint-disable-next-line prefer-rest-params */\n  all(object, predicate, arguments[2]);\n\n  return result;\n};\n\n/**\n * This method creates a new array with all elements that pass the test\n * implemented by the provided function.\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function is a predicate, to test each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n * @returns {Array} A new array with the elements that pass the test.\n */\nconst $filter = isWorking ? patchedFilter : implementation;\n\nexport default $filter;\n","import toObject from 'to-object-x';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport attempt from 'attempt-x';\n\nconst nativeGOPS = {}.constructor.getOwnPropertySymbols;\nlet isWorking;\n\nif (hasSymbolSupport && nativeGOPS && typeof nativeGOPS === 'function') {\n  /* eslint-disable-next-line compat/compat */\n  const symbol = Symbol('');\n  const testObj = {a: 1};\n  testObj[symbol] = 2;\n  const r = attempt(nativeGOPS, testObj);\n  isWorking = r.threw === false && r.value && r.value.length === 1 && r.value[0] === symbol;\n}\n\n/**\n * This method creates an array of all symbol properties found directly upon a\n * given object.\n *\n * @param {object} obj - The object whose symbol properties are to be returned.\n * @throws {TypeError} If target is null or undefined.\n * @returns {Array} An array of all symbol properties found directly upon the\n *  given object.\n */\nconst getOwnPropertySymbols = function getOwnPropertySymbols(obj) {\n  const object = toObject(obj);\n\n  return isWorking ? nativeGOPS(object) : [];\n};\n\nexport default getOwnPropertySymbols;\n","import toObject from 'to-object-x';\nimport filter from 'array-filter-x';\nimport getOPS from 'get-own-property-symbols-x';\nimport propertyIsEnumerable from 'property-is-enumerable-x';\n\n/**\n * This method returns only the enumerable own property symbols of an object.\n *\n * @param {object} target - The target.\n * @throws {TypeError} - If target is null or undefined.\n * @returns {Array} The enumerable own property symbols.\n */\nconst getOwnEnumerablePropertySymbols = function getOwnEnumerablePropertySymbols(target) {\n  const object = toObject(target);\n\n  return filter(getOPS(object), function iteratee(symbol) {\n    return propertyIsEnumerable(object, symbol);\n  });\n};\n\nexport default getOwnEnumerablePropertySymbols;\n","import toObject from 'to-object-x';\nimport objectKeys from 'object-keys-x';\nimport getOEPS from 'get-own-enumerable-property-symbols-x';\nimport methodize from 'simple-methodize-x';\n\nconst concat = methodize([].concat);\n\n/**\n * This method returns only the enumerable own keys of an object.\n *\n * @param {object} target - The target.\n * @throws {TypeError} - If target is null or undefined.\n * @returns {Array} The enumerable own keys.\n */\nconst getOwnNonEnumerableKeys = function getOwnNonEnumerableKeys(target) {\n  const object = toObject(target);\n\n  return concat(objectKeys(object), getOEPS(object));\n};\n\nexport default getOwnNonEnumerableKeys;\n","import forEach from 'array-for-each-x';\nimport $defineProperty from 'object-define-property-x';\nimport toObject from 'to-object-x';\nimport assertIsObject from 'assert-is-object-x';\nimport getKeys from 'get-own-enumerable-keys-x';\n\nexport const defineProperty = $defineProperty;\n\n/**\n * This method defines new or modifies existing properties directly on an\n * object, returning the object.\n *\n * @param {object} object - The object on which to define or modify properties.\n * @param {object} properties - An object whose own enumerable properties\n *  constitute descriptors for the\n * properties to be defined or modified.\n * @returns {object} The object that was passed to the function.\n */\nconst defineProperties = function defineProperties(object, properties) {\n  assertIsObject(object);\n  const props = toObject(properties);\n  forEach(getKeys(props), function defineProp(property) {\n    if (property !== '__proto__') {\n      $defineProperty(object, property, props[property]);\n    }\n  });\n\n  return object;\n};\n\nexport default defineProperties;\n","import numberIsFinite from 'is-finite-x';\nimport toInteger from 'to-integer-x';\n\n/**\n * This method determines whether the passed value is an integer.\n *\n * @param {*} value - The value to be tested for being an integer.\n * @returns {boolean} A Boolean indicating whether or not the given value is an integer.\n */\nconst isInteger = function isInteger(value) {\n  return numberIsFinite(value) && toInteger(value) === value;\n};\n\nexport default isInteger;\n","import isInteger from 'is-integer-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\nconst MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n\n/**\n * This method determines whether the passed value is a safe integer.\n *\n * Can be exactly represented as an IEEE-754 double precision number, and\n * whose IEEE-754 representation cannot be the result of rounding any other\n * integer to fit the IEEE-754 representation.\n *\n * @param {*} value - The value to be tested for being a safe integer.\n * @returns {boolean} A Boolean indicating whether or not the given value is a\n *  safe integer.\n */\nconst isSafeInteger = function isSafeInteger(value) {\n  return isInteger(value) && value >= MIN_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n};\n\nexport default isSafeInteger;\n","import isSafeInteger from 'is-safe-integer-x';\n\n/**\n * This method checks if `value` is a valid array-like length.\n *\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nconst isLength = function isLength(value) {\n  return isSafeInteger(value) && value >= 0;\n};\n\nexport default isLength;\n","import isNil from 'is-nil-x';\nimport isFunction from 'is-function-x';\nimport isLength from 'is-length-x';\n\n/**\n * Checks if value is array-like. A value is considered array-like if it's\n * not a function and has a `length` that's an integer greater than or\n * equal to 0 and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @param {*} value - The object to be tested.\n */\nconst isArrayLike = function isArrayLike(value) {\n  return isNil(value) === false && isFunction(value, true) === false && isLength(value.length);\n};\n\nexport default isArrayLike;\n","import isString from 'is-string';\nimport methodize from 'simple-methodize-x';\n\nconst methodizedCharCodeAt = methodize(''.charCodeAt);\n\nconst checkPair1 = function checkPair1(char1) {\n  return isString(char1) && char1.length === 2;\n};\n\nconst checkPair2 = function checkPair2(char1, char2) {\n  return isString(char1) && char1.length === 1 && isString(char2) && char2.length === 1;\n};\n\nconst getPair1 = function getPair1(char1) {\n  if (checkPair1(char1)) {\n    return {\n      first: methodizedCharCodeAt(char1, 0),\n      second: methodizedCharCodeAt(char1, 1),\n    };\n  }\n\n  return false;\n};\n\nconst getPair2 = function getPair2(char1, char2) {\n  if (checkPair2(char1, char2)) {\n    return {\n      first: methodizedCharCodeAt(char1, 0),\n      second: methodizedCharCodeAt(char2, 0),\n    };\n  }\n\n  return false;\n};\n\nconst isPair = function isPair(result) {\n  if (result === false) {\n    return false;\n  }\n\n  const {first, second} = result;\n\n  return first >= 0xd800 && first <= 0xdbff && second >= 0xdc00 && second <= 0xdfff;\n};\n\n/**\n * Tests if the two character arguments combined are a valid UTF-16\n * surrogate pair.\n *\n * @param {*} char1 - The character combination, or if `char2` is supplied then\n *  the first character of a suspected surrogate pair.\n * @param {*} [char2] - The second character of a suspected surrogate pair.\n * @returns {boolean} Returns true if the two characters create a valid\n *  'UTF-16' surrogate pair; otherwise false.\n */\nconst isSurrogatePair = function isSurrogatePair(char1, char2) {\n  const argsLength = arguments.length;\n\n  if (argsLength < 1) {\n    return false;\n  }\n\n  let result;\n\n  if (argsLength === 1) {\n    result = getPair1(char1);\n  } else if (argsLength > 1) {\n    result = getPair2(char1, char2);\n  }\n\n  return isPair(result);\n};\n\nexport default isSurrogatePair;\n","import numberIsNaN from 'is-nan-x';\n\n/**\n * This method is the comparison abstract operation SameValue(x, y), where x\n * and y are ECMAScript language values, produces true or false.\n *\n * @param {*} [value1] - The first value to compare.\n * @param {*} [value2] - The second value to compare.\n * @returns {boolean} A Boolean indicating whether or not the two arguments are\n *  the same value.\n */\nconst sameValue = function sameValue(value1, value2) {\n  if (value1 === 0 && value2 === 0) {\n    return 1 / value1 === 1 / value2;\n  }\n\n  if (value1 === value2) {\n    return true;\n  }\n\n  return numberIsNaN(value1) && numberIsNaN(value2);\n};\n\nexport default sameValue;\n","import sameValue from 'same-value-x';\n\n/**\n * This method determines whether two values are the same value.\n * SameValueZero differs from SameValue (`Object.is`) only in its treatment\n * of +0 and -0.\n *\n * @param {*} [x] - The first value to compare.\n * @param {*} [y] - The second value to compare.\n * @returns {boolean} A Boolean indicating whether or not the two arguments\n * are the same value.\n */\nconst sameValueZero = function sameValueZero(x, y) {\n  return x === y || sameValue(x, y);\n};\n\nexport default sameValueZero;\n","import attempt from 'attempt-x';\nimport toLength from 'to-length-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\n\nconst pFindIndex = typeof Array.prototype.findIndex === 'function' && Array.prototype.findIndex;\n\nlet isWorking;\n\nif (pFindIndex) {\n  const testArr = [];\n  testArr.length = 2;\n  testArr[1] = 1;\n  let res = attempt.call(testArr, pFindIndex, (item, idx) => {\n    return idx === 0;\n  });\n\n  isWorking = res.threw === false && res.value === 0;\n\n  if (isWorking) {\n    res = attempt.call(1, pFindIndex, (item, idx) => {\n      return idx === 0;\n    });\n\n    isWorking = res.threw === false && res.value === -1;\n  }\n\n  if (isWorking) {\n    isWorking = attempt.call([], pFindIndex).threw;\n  }\n\n  if (isWorking) {\n    res = attempt.call('abc', pFindIndex, (item) => {\n      return item === 'c';\n    });\n\n    isWorking = res.threw === false && res.value === 2;\n  }\n\n  if (isWorking) {\n    res = attempt.call(\n      (function getArgs() {\n        /* eslint-disable-next-line prefer-rest-params */\n        return arguments;\n      })('a', 'b', 'c'),\n      pFindIndex,\n      (item) => {\n        return item === 'c';\n      },\n    );\n\n    isWorking = res.threw === false && res.value === 2;\n  }\n}\n\n/**\n * Like `findIndex`, this method returns an index in the array, if an element\n * in the array satisfies the provided testing function. Otherwise -1 is returned.\n *\n * @param {Array} array - The array to search.\n * @throws {TypeError} If array is `null` or `undefined`-.\n * @param {Function} callback - Function to execute on each value in the array,\n *  taking three arguments: `element`, `index` and `array`.\n * @throws {TypeError} If `callback` is not a function.\n * @param {*} [thisArg] - Object to use as `this` when executing `callback`.\n * @returns {number} Returns index of positively tested element, otherwise -1.\n */\nlet findIdx;\n\nif (isWorking) {\n  findIdx = function findIndex(array, callback) {\n    const args = [callback];\n\n    if (arguments.length > 2) {\n      /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n      args[1] = arguments[2];\n    }\n\n    return pFindIndex.apply(array, args);\n  };\n} else {\n  findIdx = function findIndex(array, callback) {\n    const object = toObject(array);\n    assertIsFunction(callback);\n    const iterable = splitIfBoxedBug(object);\n    const length = toLength(iterable.length);\n\n    if (length < 1) {\n      return -1;\n    }\n\n    let thisArg;\n\n    if (arguments.length > 2) {\n      /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n      thisArg = arguments[2];\n    }\n\n    let index = 0;\n    while (index < length) {\n      if (callback.call(thisArg, iterable[index], index, object)) {\n        return index;\n      }\n\n      index += 1;\n    }\n\n    return -1;\n  };\n}\n\nconst fi = findIdx;\n\nexport default fi;\n","import toObject from 'to-object-x';\nimport toLength from 'to-length-x';\nimport toInteger from 'to-integer-x';\nimport isArrayLike from 'is-array-like-x';\n\nconst getMax = function getMax(a, b) {\n  return a >= b ? a : b;\n};\n\n/**\n * This method calculates a fromIndex of a given value for an array.\n *\n * @param {Array} array - * The array on which to calculate the starting index.\n * @throws {TypeError} If array is null or undefined.\n * @param {number} fromIndex - * The position in this array at which to begin. A\n *  negative value gives the index of array.length + fromIndex by asc.\n * @returns {number} The calculated fromIndex. Default is 0.\n */\nconst calcFromIndex = function calcFromIndex(array, fromIndex) {\n  const object = toObject(array);\n\n  if (isArrayLike(object) === false) {\n    return 0;\n  }\n\n  const index = toInteger(fromIndex);\n\n  return index >= 0 ? index : getMax(0, toLength(object.length) + index);\n};\n\nexport default calcFromIndex;\n","import numberIsNaN from 'is-nan-x';\nimport isString from 'is-string';\nimport toObject from 'to-object-x';\nimport toLength from 'to-length-x';\nimport sameValueZero from 'same-value-zero-x';\nimport sameValue from 'same-value-x';\nimport findIndex from 'find-index-x';\nimport calcFromIndex from 'calculate-from-index-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\nimport attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\nimport methodize from 'simple-methodize-x';\nimport toInteger from 'to-integer-x';\n\nconst nio = [].indexOf;\nconst nativeIndexOf = typeof nio === 'function' && methodize(nio);\nconst {max: mathMax} = Math;\n\nconst test1 = function test1() {\n  const res = attempt(nativeIndexOf, [0, 1], 1, 2);\n\n  return res.threw === false && res.value === -1;\n};\n\nconst test2 = function test2() {\n  const res = attempt(nativeIndexOf, [0, 1], 1);\n\n  return res.threw === false && res.value === 1;\n};\n\nconst test3 = function test3() {\n  const res = attempt(nativeIndexOf, [0, -0], -0);\n\n  return res.threw === false && res.value === 0;\n};\n\nconst test4 = function test4() {\n  const testArr = [];\n  testArr.length = 2;\n  /* eslint-disable-next-line no-void */\n  testArr[1] = void 0;\n  /* eslint-disable-next-line no-void */\n  const res = attempt(nativeIndexOf, testArr, void 0);\n\n  return res.threw === false && res.value === 1;\n};\n\nconst test5 = function test5() {\n  const res = attempt(nativeIndexOf, 'abc', 'c');\n\n  return res.threw === false && res.value === 2;\n};\n\nconst test6 = function test6() {\n  const args = (function getArgs() {\n    /* eslint-disable-next-line prefer-rest-params */\n    return arguments;\n  })('a', 'b', 'c');\n\n  const res = attempt(nativeIndexOf, args, 'c');\n\n  return res.threw === false && res.value === 2;\n};\n\nconst isWorking = toBoolean(nativeIndexOf) && test1() && test2() && test3() && test4() && test5() && test6();\n\nexport const implementation = function indexOf(array, searchElement) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  const iterable = splitIfBoxedBug(object);\n  const length = toLength(iterable.length);\n\n  if (length === 0) {\n    return -1;\n  }\n\n  let i = 0;\n\n  if (arguments.length > 2) {\n    /* eslint-disable-next-line prefer-rest-params */\n    i = toInteger(arguments[2]);\n  }\n\n  // handle negative indices\n  i = i >= 0 ? i : mathMax(0, length + i);\n  for (; i < length; i += 1) {\n    if (i in iterable && iterable[i] === searchElement) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nconst pIndexOf = isWorking ? nativeIndexOf : implementation;\n\n/**\n * This method returns an index in the array, if an element in the array\n * satisfies the provided testing function. Otherwise -1 is returned.\n *\n * @private\n * @param {Array} array - The array to search.\n * @param {*} searchElement - Element to locate in the array.\n * @param {number} fromIndex - The index to start the search at.\n * @param {Function} extendFn - The comparison function to use.\n * @returns {number} Returns index of found element, otherwise -1.\n */\nconst findIdxFrom = function findIndexFrom(array, searchElement, fromIndex, extendFn) {\n  let fIdx = fromIndex;\n  const length = toLength(array.length);\n  while (fIdx < length) {\n    if (fIdx in array && extendFn(array[fIdx], searchElement)) {\n      return fIdx;\n    }\n\n    fIdx += 1;\n  }\n\n  return -1;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method returns the first index at which a given element can be found\n * in the array, or -1 if it is not present.\n *\n * @param {Array} array - The array to search.\n * @throws {TypeError} If `array` is `null` or `undefined`.\n * @param {*} searchElement - Element to locate in the `array`.\n * @param {number} [fromIndex] - The index to start the search at. If the\n *  index is greater than or equal to the array's length, -1 is returned,\n *  which means the array will not be searched. If the provided index value is\n *  a negative number, it is taken as the offset from the end of the array.\n *  Note: if the provided index is negative, the array is still searched from\n *  front to back. If the calculated index is less than 0, then the whole\n *  array will be searched. Default: 0 (entire array is searched).\n * @param {string} [extend] - Extension type: `SameValue` or `SameValueZero`.\n * @returns {number} Returns index of found element, otherwise -1.\n */\n// eslint-enable jsdoc/check-param-names\nconst indexOf = function indexOf(array, searchElement) {\n  const object = toObject(array);\n  const iterable = splitIfBoxedBug(object);\n  const length = toLength(iterable.length);\n\n  if (length < 1) {\n    return -1;\n  }\n\n  const argLength = arguments.length;\n  /* eslint-disable-next-line prefer-rest-params */\n  let extend = argLength > 2 && argLength > 3 ? arguments[3] : arguments[2];\n  let extendFn;\n\n  if (isString(extend)) {\n    extend = extend.toLowerCase();\n\n    if (extend === 'samevalue') {\n      extendFn = sameValue;\n    } else if (extend === 'samevaluezero') {\n      extendFn = sameValueZero;\n    }\n  }\n\n  let fromIndex = 0;\n\n  if (extendFn && (searchElement === 0 || numberIsNaN(searchElement))) {\n    if (argLength > 3) {\n      /* eslint-disable-next-line prefer-rest-params */\n      fromIndex = calcFromIndex(iterable, arguments[2]);\n\n      if (fromIndex >= length) {\n        return -1;\n      }\n\n      if (fromIndex < 0) {\n        fromIndex = 0;\n      }\n    }\n\n    if (fromIndex > 0) {\n      return findIdxFrom(iterable, searchElement, fromIndex, extendFn);\n    }\n\n    return findIndex(iterable, (element, index) => {\n      return index in iterable && extendFn(searchElement, element);\n    });\n  }\n\n  if (argLength > 3 || (argLength > 2 && toBoolean(extendFn) === false)) {\n    /* eslint-disable-next-line prefer-rest-params */\n    fromIndex = calcFromIndex(iterable, arguments[2]);\n\n    if (fromIndex >= length) {\n      return -1;\n    }\n\n    if (fromIndex < 0) {\n      fromIndex = 0;\n    }\n  }\n\n  return pIndexOf(iterable, searchElement, fromIndex);\n};\n\nexport default indexOf;\n","import toObject from 'to-object-x';\nimport isArguments from 'is-arguments';\nimport isArray from 'is-array-x';\nimport arrayLikeSlice from 'array-like-slice-x';\nimport attempt from 'attempt-x';\nimport isString from 'is-string';\nimport methodize from 'simple-methodize-x';\n\nconst methodizedSlice = methodize([].slice);\n\nconst testArray = function testArray() {\n  const res = attempt(function attemptee() {\n    return methodizedSlice([1, 2, 3], 1, 2);\n  });\n\n  return res.threw || isArray(res.value) === false || res.value.length !== 1 || res.value[0] !== 2;\n};\n\nconst testString = function testString() {\n  const res = attempt(function attemptee() {\n    return methodizedSlice('abc', 1, 2);\n  });\n\n  return res.threw || isArray(res.value) === false || res.value.length !== 1 || res.value[0] !== 'b';\n};\n\nconst testDOM = function testDOM() {\n  const doc = typeof document !== 'undefined' && document;\n  const resultDocElement = doc\n    ? attempt(function attemptee() {\n        return methodizedSlice(doc.documentElement);\n      }).threw\n    : false;\n\n  return resultDocElement ? resultDocElement.threw : false;\n};\n\nconst failArray = testArray();\nconst failString = testString();\nconst failDOM = testDOM();\n\nconst useArrayLike = function useArrayLike(object) {\n  return failArray || (failDOM && isArray(object) === false) || (failString && isString(object)) || isArguments(object);\n};\n\n/**\n * The slice() method returns a shallow copy of a portion of an array into a new\n * array object selected from begin to end (end not included). The original\n * array will not be modified.\n *\n * @param {Array|object} array - The array to slice.\n * @param {number} [start] - Zero-based index at which to begin extraction.\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(-2) extracts the last two elements in the sequence.\n *  If begin is undefined, slice begins from index 0.\n * @param {number} [end] - Zero-based index before which to end extraction.\n *  Slice extracts up to but not including end. For example, slice(1,4)\n *  extracts the second element through the fourth element (elements indexed\n *  1, 2, and 3).\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(2,-1) extracts the third element through the second-to-last\n *  element in the sequence.\n *  If end is omitted, slice extracts through the end of the\n *  sequence (arr.length).\n *  If end is greater than the length of the sequence, slice extracts through\n *  the end of the sequence (arr.length).\n * @returns {Array} A new array containing the extracted elements.\n */\nconst slice = function slice(array, start, end) {\n  const object = toObject(array);\n\n  return useArrayLike(object) ? arrayLikeSlice(object, start, end) : methodizedSlice(object, start, end);\n};\n\nexport default slice;\n","import attempt from 'attempt-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\nimport toLength from 'to-length-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport toBoolean from 'to-boolean-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport methodize from 'simple-methodize-x';\n\nconst rr = [].reduceRight;\nconst nativeReduceR = typeof rr === 'function' && methodize(rr);\n\nconst test1 = function test1() {\n  return attempt(function attemptee() {\n    return nativeReduceR([], function iteratee(acc) {\n      return acc;\n    });\n  }).threw;\n};\n\nconst test2 = function test2() {\n  const res = attempt(function attemptee() {\n    return nativeReduceR(\n      toObject('abc'),\n      function iteratee(acc, c) {\n        return acc + c;\n      },\n      'x',\n    );\n  });\n\n  return res.threw === false && res.value === 'xcba';\n};\n\nconst test3 = function test3() {\n  const res = attempt(function attemptee() {\n    const args = (function getArgs() {\n      /* eslint-disable-next-line prefer-rest-params */\n      return arguments;\n    })(1, 2, 3);\n\n    return nativeReduceR(\n      args,\n      function iteratee(acc, arg) {\n        return acc + arg;\n      },\n      1,\n    );\n  });\n\n  return res.threw === false && res.value === 7;\n};\n\nconst test4 = function test4() {\n  const res = attempt(function attemptee() {\n    return nativeReduceR(\n      {0: 1, 1: 2, 3: 3, 4: 4, length: 4},\n      function iteratee(acc, arg) {\n        return acc + arg;\n      },\n      2,\n    );\n  });\n\n  return res.threw === false && res.value === 8;\n};\n\nconst doc = typeof document !== 'undefined' && document;\n\nconst iteratee5 = function iteratee5(acc, node) {\n  acc[acc.length] = node;\n\n  return acc;\n};\n\nconst test5 = function test5() {\n  if (doc) {\n    const fragment = doc.createDocumentFragment();\n    const div = doc.createElement('div');\n    fragment.appendChild(div);\n\n    const res = attempt(function attemptee() {\n      return nativeReduceR(fragment.childNodes, iteratee5, []);\n    });\n\n    return res.threw === false && res.value.length === 1 && res.value[0] === div;\n  }\n\n  return true;\n};\n\nconst test6 = function test6() {\n  const res = attempt(function attemptee() {\n    return nativeReduceR('ab', function iteratee() {\n      /* eslint-disable-next-line prefer-rest-params */\n      return arguments[3];\n    });\n  });\n\n  return res.threw === false && typeof res.value === 'object';\n};\n\n// ES5 15.4.4.22\n// http://es5.github.com/#x15.4.4.22\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight\nconst isWorking = toBoolean(nativeReduceR) && test1() && test2() && test3() && test4() && test5() && test6();\n\nconst patchedReduceRight = function reduceRight(array, callBack /* , initialValue */) {\n  requireObjectCoercible(array);\n  assertIsFunction(callBack);\n\n  /* eslint-disable-next-line prefer-rest-params */\n  return arguments.length > 2 ? nativeReduceR(array, callBack, arguments[2]) : nativeReduceR(array, callBack);\n};\n\nexport const implementation = function reduceRight(array, callBack /* , initialValue */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n  const iterable = splitIfBoxedBug(object);\n  const length = toLength(iterable.length);\n  const argsLength = arguments.length;\n\n  // no value to return if no initial value, empty array\n  if (length === 0 && argsLength < 3) {\n    throw new TypeError('Reduce of empty array with no initial value');\n  }\n\n  let result;\n  let i = length - 1;\n\n  if (argsLength > 2) {\n    /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n    result = arguments[2];\n  } else {\n    do {\n      if (i in iterable) {\n        result = iterable[i];\n        i -= 1;\n        break;\n      }\n\n      // if array contains no values, no initial value to return\n      i -= 1;\n\n      if (i < 0) {\n        throw new TypeError('Reduce of empty array with no initial value');\n      }\n    } while (true); /* eslint-disable-line no-constant-condition */\n  }\n\n  while (i >= 0) {\n    if (i in iterable) {\n      result = callBack(result, iterable[i], i, object);\n    }\n\n    i -= 1;\n  }\n\n  return result;\n};\n\n/**\n * This method applies a function against an accumulator and each value of the\n * array (from right-to-left) to reduce it to a single value..\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to execute for each element.\n * @param {*} [initialValue] - Value to use as the first argument to the first\n *  call of the callback. If no initial value is supplied, the first element in\n *  the array will be used. Calling reduceRight on an empty array without an initial\n *  value is an error.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n * @throws {TypeError} If called on an empty array without an initial value.\n * @returns {*} The value that results from the reduction.\n */\nconst $reduceRight = isWorking ? patchedReduceRight : implementation;\n\nexport default $reduceRight;\n","import defineProperties from 'object-define-properties-x';\nimport slice from 'array-slice-x';\nimport reduceRight from 'array-reduce-right-x';\nimport toBoolean from 'to-boolean-x';\n\nconst reducer = function _reducer(acc, digit) {\n  return acc + digit;\n};\n\n/**\n * Serialise the counter´s current value.\n *\n * @private\n * @this BigCounter\n * @returns {string} A string representation of an integer.\n */\nconst counterToString = function ToString() {\n  return reduceRight(this.count, reducer, '');\n};\n\n/**\n * Incremental integer counter. Counts from `0` to very big integers.\n * Javascript´s number type allows you to count in integer steps\n * from `0` to `9007199254740991`. As of ES5, Strings can contain\n * approximately 65000 characters and ES6 is supposed to handle\n * the `MAX_SAFE_INTEGER` (though I don´t believe any environments supports\n * this). This counter represents integer values as strings and can therefore\n * count in integer steps from `0` to the maximum string length (that´s some\n * 65000 digits). In the lower range, upto `9007199254740991`, the strings can\n * be converted to safe Javascript integers `Number(value)` or `+value`. This\n * counter is great for any applications that need a really big count\n * represented as a string, (an ID string).\n *\n * @class\n * @property {Array<number>} count - A representation of a big number.\n */\nconst BigCounter = function BigCounter() {\n  if (toBoolean(this) === false || !(this instanceof BigCounter)) {\n    throw new TypeError('Constructor BigCounter requires \"new\"');\n  }\n\n  defineProperties(this, {\n    count: {\n      value: [0],\n    },\n  });\n};\n\ndefineProperties(BigCounter.prototype, {\n  /**\n   * Gets the counter´s current value.\n   *\n   * @function\n   * @returns {string} A string representation of an integer.\n   */\n  get: {\n    value: counterToString,\n  },\n  /**\n   * Increments the counter´s value by `1`.\n   *\n   * @function\n   * @returns {object} The counter object.\n   */\n  next: {\n    value: function next() {\n      const clone = slice(this.count);\n      this.count.length = 0;\n      const {length} = clone;\n      const howMany = length > 0 ? length : 1;\n      let carry = 0;\n      let index = 0;\n      while (index < howMany || carry) {\n        const zi = carry + (clone[index] || 0) + (index === 0);\n        this.count[this.count.length] = zi % 10;\n        /* eslint-disable-next-line no-bitwise */\n        carry = (zi / 10) >> 0; // floor\n        index += 1;\n      }\n\n      return this;\n    },\n  },\n  /**\n   * Resets the counter back to `0`.\n   *\n   * @function\n   * @returns {object} The counter object.\n   */\n  reset: {\n    value: function reset() {\n      this.count.length = 1;\n      this.count[0] = 0;\n\n      return this;\n    },\n  },\n  /**\n   * Gets the counter´s current value.\n   *\n   * @function\n   * @returns {string} A string representation of an integer.\n   */\n  toJSON: {\n    value: counterToString,\n  },\n  /**\n   * Gets the counter´s current value.\n   *\n   * @function\n   * @returns {string} A string representation of an integer.\n   */\n  toString: {\n    value: counterToString,\n  },\n  /**\n   * Gets the counter´s current value.\n   *\n   * @function\n   * @returns {string} A string representation of an integer.\n   */\n  valueOf: {\n    value: counterToString,\n  },\n});\n\nexport default BigCounter;\n","import attempt from 'attempt-x';\nimport isObjectLike from 'is-object-like-x';\nimport gOPD from 'object-get-own-property-descriptor-x';\nimport call from 'simple-call-x';\n\nconst stubTrue = function stubTrue() {\n  return true;\n};\n\n/**\n * @param {Function|!object} creator - A creator function or a created object.\n * @returns {!object} - An attempt object.\n */\nconst getResult = function getResult(creator) {\n  return typeof creator === 'function'\n    ? attempt(creator)\n    : {\n        threw: false,\n        value: creator,\n      };\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * @param {!object} descriptor - A descriptor object.\n * @param {!object} context - A created object.\n * @param {Function} [validator] - A function to validate the result.\n * @returns {Function|null} - The getter function or null.\n */\n// eslint-enable jsdoc/check-param-names\nconst getter = function getter(descriptor, context) {\n  /* eslint-disable-next-line prefer-rest-params */\n  const validator = typeof arguments[2] === 'function' ? arguments[2] : stubTrue;\n  const res = attempt(function attemptee() {\n    return call(descriptor.get, context);\n  });\n\n  return res.threw === false && validator(res.value) ? descriptor.get : null;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * Get a getter.\n *\n * @param {Function|!object} creator - A creator function or a created object.\n * @param {string} getterName - The getter name.\n * @param {Function} [validator] - A function to validate the result.\n * @returns {Function|null} The target.\n */\n// eslint-enable jsdoc/check-param-names\nconst getGetter = function getGetter(creator, getterName) {\n  const resTest1 = getResult(creator);\n\n  if (resTest1.threw === false && isObjectLike(resTest1.value)) {\n    const descriptor = gOPD(resTest1.value.constructor.prototype, getterName);\n\n    if (descriptor && typeof descriptor.get === 'function') {\n      /* eslint-disable-next-line prefer-rest-params */\n      return getter(descriptor, resTest1.value, arguments[2]);\n    }\n  }\n\n  return null;\n};\n\nexport default getGetter;\n","import attempt from 'attempt-x';\nimport isObjectLike from 'is-object-like-x';\nimport isLength from 'is-length-x';\nimport call from 'simple-call-x';\nimport getGetter from 'util-get-getter-x';\n\nconst creator = function creator() {\n  /* eslint-disable-next-line compat/compat */\n  return new Map();\n};\n\nconst getSize = getGetter(creator, 'size', isLength);\n\n/**\n * Determine if an `object` is a `Map`.\n *\n * @param {*} object - The object to test.\n * @returns {boolean} `true` if the `object` is a `Map`,\n *  else `false`.\n */\nconst isMap = function isMap(object) {\n  if (getSize === null || isObjectLike(object) === false) {\n    return false;\n  }\n\n  const result = attempt(function attemptee() {\n    return call(getSize, object);\n  });\n\n  return result.threw === false && isLength(result.value);\n};\n\nexport default isMap;\n","import attempt from 'attempt-x';\nimport isObjectLike from 'is-object-like-x';\nimport isLength from 'is-length-x';\nimport call from 'simple-call-x';\nimport getGetter from 'util-get-getter-x';\n\nconst creator = function creator() {\n  /* eslint-disable-next-line compat/compat */\n  return new Set();\n};\n\nconst getSize = getGetter(creator, 'size', isLength);\n\n/**\n * Determine if an `object` is a `Set`.\n *\n * @param {*} object - The object to test.\n * @returns {boolean} `true` if the `object` is a `Set`,\n *  else `false`.\n */\nconst isSet = function isSet(object) {\n  if (getSize === null || isObjectLike(object) === false) {\n    return false;\n  }\n\n  const result = attempt(function attemptee() {\n    return call(getSize, object);\n  });\n\n  return result.threw === false && isLength(result.value);\n};\n\nexport default isSet;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport any from 'array-any-x';\nimport toBoolean from 'to-boolean-x';\nimport methodize from 'simple-methodize-x';\nimport call from 'simple-call-x';\n\nconst ns = [].some;\nconst nativeSome = typeof ns === 'function' && methodize(ns);\n\nconst test1 = function test1() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    return nativeSome([1, 2], function spyAdd1(item) {\n      spy += item;\n\n      return false;\n    });\n  });\n\n  return res.threw === false && res.value === false && spy === 3;\n};\n\nconst test2 = function test2() {\n  let spy = '';\n  const res = attempt(function attemptee() {\n    return nativeSome(toObject('abc'), function spyAdd2(item, index) {\n      spy += item;\n\n      return index === 1;\n    });\n  });\n\n  return res.threw === false && res.value === true && spy === 'ab';\n};\n\nconst test3 = function test3() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    const args = (function getArgs() {\n      /* eslint-disable-next-line prefer-rest-params */\n      return arguments;\n    })(1, 2, 3);\n\n    return nativeSome(args, function spyAdd3(item, index) {\n      spy += item;\n\n      return index === 2;\n    });\n  });\n\n  return res.threw === false && res.value === true && spy === 6;\n};\n\nconst test4 = function test4() {\n  let spy = 0;\n  const res = attempt(function attemptee() {\n    return nativeSome({0: 1, 1: 2, 3: 3, 4: 4, length: 4}, function spyAdd4(item) {\n      spy += item;\n\n      return false;\n    });\n  });\n\n  return res.threw === false && res.value === false && spy === 6;\n};\n\nconst doc = typeof document !== 'undefined' && document;\n\nconst test5 = function test5() {\n  if (doc) {\n    let spy = null;\n    const fragment = doc.createDocumentFragment();\n    const div = doc.createElement('div');\n    fragment.appendChild(div);\n    const res = attempt(function attemptee() {\n      return nativeSome(fragment.childNodes, function spyAssign(item) {\n        spy = item;\n\n        return item;\n      });\n    });\n\n    return res.threw === false && res.value === true && spy === div;\n  }\n\n  return true;\n};\n\nconst isStrict = (function getIsStrict() {\n  /* eslint-disable-next-line babel/no-invalid-this */\n  return toBoolean(this) === false;\n})();\n\nconst test6 = function test6() {\n  if (isStrict) {\n    let spy = null;\n\n    const thisTest = function thisTest() {\n      /* eslint-disable-next-line babel/no-invalid-this */\n      spy = typeof this === 'string';\n    };\n\n    const res = attempt(function attemptee() {\n      return nativeSome([1], thisTest, 'x');\n    });\n\n    return res.threw === false && res.value === false && spy === true;\n  }\n\n  return true;\n};\n\nconst test7 = function test7() {\n  const spy = {};\n  const fn =\n    'return nativeSome(\"foo\", function (_, __, context) {' +\n    'if (castBoolean(context) === false || typeof context !== \"object\") {' +\n    'spy.value = true;}});';\n\n  const res = attempt(function attemptee() {\n    /* eslint-disable-next-line no-new-func */\n    return Function('nativeSome', 'spy', 'castBoolean', fn)(nativeSome, spy, toBoolean);\n  });\n\n  return res.threw === false && res.value === false && spy.value !== true;\n};\n\nconst isWorking = toBoolean(nativeSome) && test1() && test2() && test3() && test4() && test5() && test6() && test7();\n\nconsole.log(isWorking);\n\nconst patchedSome = function some(array, callBack /* , thisArg */) {\n  /* eslint-disable-next-line prefer-rest-params */\n  return nativeSome(requireObjectCoercible(array), assertIsFunction(callBack), arguments[2]);\n};\n\n// ES5 15.4.4.17\n// http://es5.github.com/#x15.4.4.17\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some\nexport const implementation = function some(array, callBack /* , thisArg */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n\n  const iteratee = function iteratee() {\n    /* eslint-disable-next-line prefer-rest-params */\n    const i = arguments[1];\n\n    /* eslint-disable-next-line prefer-rest-params */\n    if (i in arguments[2]) {\n      /* eslint-disable-next-line prefer-rest-params,babel/no-invalid-this */\n      if (call(callBack, this, [arguments[0], i, object])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /* eslint-disable-next-line prefer-rest-params */\n  return any(object, iteratee, arguments[2]);\n};\n\n/**\n * This method tests whether some element in the array passes the test\n * implemented by the provided function.\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to test for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n * @returns {boolean} `true` if the callback function returns a truthy value for\n *  any array element; otherwise, `false`.\n */\nconst $some = isWorking ? patchedSome : implementation;\n\nexport default $some;\n","import isFunction from 'is-function-x';\nimport toObject from 'to-object-x';\nimport toBoolean from 'to-boolean-x';\n\nconst ObjectCtr = {}.constructor;\nconst nativeGetPrototypeOf = ObjectCtr.getPrototypeOf;\n\nconst test1 = function test1() {\n  const prototypeOfCtr = {};\n  /* eslint-disable-next-line lodash/prefer-noop */\n  const Ctr = function Ctr() {};\n\n  Ctr.prototype = prototypeOfCtr;\n  const ctr = new Ctr();\n\n  try {\n    return nativeGetPrototypeOf(ctr) === prototypeOfCtr;\n  } catch (ignore) {\n    return false;\n  }\n};\n\nconst isWorking = toBoolean(nativeGetPrototypeOf) && test1();\n\nconst patchedGetPrototypeOf = function getPrototypeOf(obj) {\n  return nativeGetPrototypeOf(toObject(obj));\n};\n\nexport const implementation = function getPrototypeOf(obj) {\n  const object = toObject(obj);\n  /* eslint-disable-next-line no-proto */\n  const proto = object.__proto__;\n\n  if (proto || proto === null) {\n    return proto;\n  }\n\n  if (isFunction(object.constructor)) {\n    return object.constructor.prototype;\n  }\n\n  if (object instanceof ObjectCtr) {\n    return ObjectCtr.prototype;\n  }\n\n  return null;\n};\n\n/**\n * This method returns the prototype (i.e. The value of the internal [[Prototype]] property)\n * of the specified object.\n *\n * @function getPrototypeOf\n * @param {*} obj - The object whose prototype is to be returned.\n * @returns {object} The prototype of the given object. If there are no inherited properties, null is returned.\n */\nconst gpo = isWorking ? patchedGetPrototypeOf : implementation;\n\nexport default gpo;\n","import hasSymbolSupport from 'has-symbol-support-x';\nimport isNil from 'is-nil-x';\n\nconst ES6_SHIM_ITERATOR = '_es6-shim iterator_';\nconst AT_AT_ITERATOR = '@@iterator';\n/* eslint-disable-next-line compat/compat */\nconst hasRealSymbolIterator = hasSymbolSupport && typeof Symbol.iterator === 'symbol';\n/* eslint-disable-next-line compat/compat */\nconst hasFakeSymbolIterator = typeof Symbol === 'object' && Symbol !== null && typeof Symbol.iterator === 'string';\nconst hasSymbolIterator = hasRealSymbolIterator || hasFakeSymbolIterator;\n\nconst getOtherSymbolIterator = function getOtherSymbolIterator(iterable) {\n  if (iterable[ES6_SHIM_ITERATOR]) {\n    return ES6_SHIM_ITERATOR;\n  }\n\n  if (iterable[AT_AT_ITERATOR]) {\n    return AT_AT_ITERATOR;\n  }\n\n  return null;\n};\n\nconst getSymIt = function getSymIt() {\n  if (hasSymbolIterator) {\n    /* eslint-disable-next-line compat/compat */\n    return Symbol.iterator;\n  }\n\n  const result = getOtherSymbolIterator([]);\n\n  if (typeof result === 'string' && typeof [][result] === 'function') {\n    return result;\n  }\n\n  return AT_AT_ITERATOR;\n};\n\n/**\n * Whenever an object needs to be iterated (such as at the beginning of a for..of loop),\n * its @@iterator method is called with no arguments, and the returned iterator is used\n * to obtain the values to be iterated.\n *\n * Possible values are.\n *\n * Symbol.iterator\n * '_es6-shim iterator_'\n * '@@iterator'.\n *\n * @type {symbol|string}\n */\nconst $iterator$ = getSymIt();\n\n/**\n * Detect an iterator function.\n *\n * @private\n * @param {*} iterable - Value to detect iterator function.\n * @returns {symbol|string|undefined} The iterator property identifier.\n */\nexport const getSymbolIterator = function getSymbolIterator(iterable) {\n  if (isNil(iterable) === false) {\n    if (hasSymbolIterator && iterable[$iterator$]) {\n      return $iterator$;\n    }\n\n    const result = getOtherSymbolIterator(iterable);\n\n    if (typeof result === 'string') {\n      return result;\n    }\n  }\n\n  /* eslint-disable-next-line no-void */\n  return void 0;\n};\n\nexport default $iterator$;\n","import hasSymbolSupport from 'has-symbol-support-x';\n\n/**\n * The species accessor property allows subclasses to override the default constructor for objects.\n *\n * Possible values are.\n *\n * Symbol.species\n * '@@species'.\n *\n * @type {symbol|string}\n */\nconst symbolSpecies = (hasSymbolSupport && Symbol.species) || '@@species'; /* eslint-disable-line compat/compat */\n\nexport default symbolSpecies;\n","import attempt from 'attempt-x';\nimport isPrimitive from 'is-primitive-x';\nimport defineProperties from 'object-define-properties-x';\nimport toBoolean from 'to-boolean-x';\n\nconst ObjectCtr = {}.constructor;\nconst nCreate = ObjectCtr.create;\nconst nativeCreate = typeof nCreate === 'function' && nCreate;\n\nconst test1 = function test1() {\n  const res = attempt(nativeCreate, null);\n\n  return res.threw === false && res.value && typeof res.value === 'object';\n};\n\nconst test2 = function test2() {\n  const res = attempt(nativeCreate, null);\n\n  // noinspection LoopStatementThatDoesntLoopJS\n  for (const _ in res.value) /* eslint-disable-line guard-for-in,no-restricted-syntax */ {\n    return false;\n  }\n\n  return true;\n};\n\nconst test3 = function test3() {\n  const res = attempt(nativeCreate, null, {test: {value: true}});\n\n  return res.threw === false && res.value && typeof res.value === 'object' && res.value.test === true;\n};\n\nconst getShapes = function getShapes() {\n  // Shape - superclass\n  const Shape = function Shape() {\n    // noinspection JSUnusedGlobalSymbols\n    this.x = 0;\n    // noinspection JSUnusedGlobalSymbols\n    this.y = 0;\n  };\n\n  // superclass method\n  Shape.prototype.move = function move(x, y) {\n    // noinspection JSUnusedGlobalSymbols\n    this.x += x;\n    // noinspection JSUnusedGlobalSymbols\n    this.y += y;\n\n    return 'Shape moved.';\n  };\n\n  // Rectangle - subclass\n  const Rectangle = function Rectangle() {\n    Shape.call(this); // call super constructor.\n  };\n\n  return {Shape, Rectangle};\n};\n\nconst test4 = function test4() {\n  const {Shape} = getShapes();\n  const res = attempt(nativeCreate, Shape.prototype);\n\n  return res.threw === false && res.value && typeof res.value === 'object';\n};\n\nconst test5 = function test5() {\n  const {Shape, Rectangle} = getShapes();\n  const res = attempt(nativeCreate, Shape.prototype);\n  // subclass extends superclass\n  Rectangle.prototype = res.value;\n  Rectangle.prototype.constructor = Rectangle;\n\n  const rect = new Rectangle();\n\n  return rect instanceof Rectangle;\n};\n\nconst test6 = function test6() {\n  const {Shape, Rectangle} = getShapes();\n  const res = attempt(nativeCreate, Shape.prototype);\n  // subclass extends superclass\n  Rectangle.prototype = res.value;\n  Rectangle.prototype.constructor = Rectangle;\n\n  const rect = new Rectangle();\n\n  return rect instanceof Shape;\n};\n\nconst test7 = function test7() {\n  const {Shape, Rectangle} = getShapes();\n  const res = attempt(nativeCreate, Shape.prototype);\n  // subclass extends superclass\n  Rectangle.prototype = res.value;\n  Rectangle.prototype.constructor = Rectangle;\n\n  const rect = new Rectangle();\n\n  return rect.move(1, 1) === 'Shape moved.';\n};\n\nconst isWorking = toBoolean(nativeCreate) && test1() && test2() && test3() && test4() && test5() && test6() && test7();\n\n/**\n * This method method creates a new object with the specified prototype object and properties.\n *\n * @param {*} prototype - The object which should be the prototype of the newly-created object.\n * @param {*} [properties] - If specified and not undefined, an object whose enumerable own properties\n * (that is, those properties defined upon itself and not enumerable properties along its prototype chain)\n * specify property descriptors to be added to the newly-created object, with the corresponding property names.\n * @throws {TypeError} If the properties parameter isn't null or an object.\n * @returns {boolean} A new object with the specified prototype object and properties.\n */\nconst doc = typeof document !== 'undefined' && document;\nconst supportsProto = toBoolean({__proto__: null} instanceof ObjectCtr) === false;\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\nconst shouldUseActiveX = function shouldUseActiveX() {\n  // return early if document.domain not set\n  if (toBoolean(doc.domain) === false) {\n    return false;\n  }\n\n  const result = attempt(function attemptee() {\n    /* eslint-disable-next-line no-undef */\n    return new ActiveXObject('htmlfile');\n  });\n\n  return result.threw === false && Boolean(result.value);\n};\n\n// This supports IE8 when document.domain is used\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\nconst getEmptyViaActiveX = function getEmptyViaActiveX() {\n  /* eslint-disable-next-line no-undef */\n  let xDoc = new ActiveXObject('htmlfile');\n  /* eslint-disable-next-line no-useless-escape,prettier/prettier */\n  xDoc.write('<script><\\/script>');\n  xDoc.close();\n\n  // noinspection JSUnresolvedVariable\n  const empty = xDoc.parentWindow.Object.prototype;\n  xDoc = null;\n\n  return empty;\n};\n\n// The original implementation using an iframe\n// before the activex approach was added\n// see https://github.com/es-shims/es5-shim/issues/150\nconst getEmptyViaIFrame = function getEmptyViaIFrame() {\n  let iframe = doc.createElement('iframe');\n  iframe.style.display = 'none';\n  /* eslint-disable-next-line no-script-url */\n  iframe.src = 'javascript:';\n\n  const parent = doc.body || doc.documentElement;\n  parent.appendChild(iframe);\n\n  const empty = iframe.contentWindow.Object.prototype;\n  parent.removeChild(iframe);\n  iframe = null;\n\n  return empty;\n};\n\n// the following produces false positives\n// in Opera Mini => not a reliable check\n// Object.prototype.__proto__ === null\nconst createEmptyProto = function createEmpty() {\n  return {__proto__: null};\n};\n\n// In old IE __proto__ can't be used to manually set `null`, nor does\n// any other method exist to make an object that inherits from nothing,\n// aside from Object.prototype itself. Instead, create a new global\n// object and *steal* its Object.prototype and strip it bare. This is\n// used as the prototype to create nullary objects.\nlet createEmptyNoProto = function createEmpty() {\n  // Determine which approach to use\n  // see https://github.com/es-shims/es5-shim/issues/150\n  const empty = shouldUseActiveX() ? getEmptyViaActiveX() : getEmptyViaIFrame();\n\n  delete empty.constructor;\n  delete empty.hasOwnProperty;\n  delete empty.propertyIsEnumerable;\n  delete empty.isPrototypeOf;\n  delete empty.toLocaleString;\n  delete empty.toString;\n  delete empty.valueOf;\n\n  /* eslint-disable-next-line lodash/prefer-noop */\n  const E = function Empty() {};\n\n  E.prototype = empty;\n  // short-circuit future calls\n  createEmptyNoProto = function createEmptyShortCircuit() {\n    return new E();\n  };\n\n  return new E();\n};\n\n// Contributed by Brandon Benvie, October, 2012\nconst createEmpty = supportsProto || toBoolean(doc) === false ? createEmptyProto : createEmptyNoProto;\n\nexport const implementation = function create(prototype, properties) {\n  let object;\n  /* eslint-disable-next-line lodash/prefer-noop */\n  const T = function Type() {}; // An empty constructor.\n\n  if (prototype === null) {\n    object = createEmpty();\n  } else {\n    if (isPrimitive(prototype)) {\n      // In the native implementation `parent` can be `null`\n      // OR *any* `instanceof Object`  (Object|Function|Array|RegExp|etc)\n      // Use `typeof` tho, b/c in old IE, DOM elements are not `instanceof Object`\n      // like they are in modern browsers. Using `Object.create` on DOM elements\n      // is...err...probably inappropriate, but the native version allows for it.\n      throw new TypeError('Object prototype may only be an Object or null'); // same msg as Chrome\n    }\n\n    T.prototype = prototype;\n    object = new T();\n    // IE has no built-in implementation of `Object.getPrototypeOf`\n    // neither `__proto__`, but this manually setting `__proto__` will\n    // guarantee that `Object.getPrototypeOf` will work as expected with\n    // objects created using `Object.create`\n    /* eslint-disable-next-line no-proto */\n    object.__proto__ = prototype;\n  }\n\n  if (typeof properties !== 'undefined') {\n    defineProperties(object, properties);\n  }\n\n  return object;\n};\n\nconst $create = isWorking ? nativeCreate : implementation;\n\nexport default $create;\n","/*!\n * is-var-name | ISC (c) Shinnosuke Watanabe\n * https://github.com/shinnn/is-var-name\n*/\nexport default function isVarName(str) {\n\tif (typeof str !== 'string') {\n\t\treturn false;\n\t}\n\n\tif (str.trim() !== str) {\n\t\treturn false;\n\t}\n\n\ttry {\n\t\tnew Function(str, 'var ' + str);\n\t} catch (e) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","import getOwnPropertyDescriptor from 'object-get-own-property-descriptor-x';\nimport attempt from 'attempt-x';\nimport defineProperty from 'object-define-property-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport isVarName from 'is-var-name';\nimport toStr from 'to-string-x';\nimport toBoolean from 'to-boolean-x';\n\nconst rename = function rename(fn, name) {\n  const descriptor = getOwnPropertyDescriptor(fn, 'name');\n\n  if (descriptor && descriptor.configurable) {\n    defineProperty(fn, 'name', {configurable: true, value: name});\n  }\n\n  return fn.name;\n};\n\nexport const supportsFunctionRenaming =\n  attempt(function attemptee() {\n    /* eslint-disable-next-line lodash/prefer-noop */\n    return rename(function test1() {}, 'test2');\n  }).value === 'test2';\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * Renames a function.\n *\n * @param {Function} fn - The function to be renamed.\n * @param {string} name - The new name for the function.\n * @param {boolean} [force=false] - Rename even if reported as not valid.\n * @returns {boolean} - Returns true if renaming was a success; otherwise false.\n */\n// eslint-enable jsdoc/check-param-names\nconst renameFunction = function renameFunction(fn, name) {\n  assertIsFunction(fn);\n  const string = toStr(name);\n  /* eslint-disable-next-line prefer-rest-params */\n  const force = arguments.length > 2 && toBoolean(arguments[2]);\n\n  if (force === false && isVarName(string) === false) {\n    throw new Error(`Not a valid function name \"${string}\"`);\n  }\n\n  return supportsFunctionRenaming && rename(fn, name) === string;\n};\n\nexport default renameFunction;\n","import hasOwn from 'has-own-property-x';\nimport isFunction from 'is-function-x';\nimport defineProperty from 'object-define-property-x';\nimport defineProperties from 'object-define-properties-x';\nimport isString from 'is-string';\nimport isArrayLike from 'is-array-like-x';\nimport isPrimitive from 'is-primitive-x';\nimport isSurrogatePair from 'is-surrogate-pair-x';\nimport indexOf from 'index-of-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport assertIsObject from 'assert-is-object-x';\nimport IdGenerator from 'big-counter-x';\nimport $isMap from 'is-map-x';\nimport $isSet from 'is-set-x';\nimport isObjectLike from 'is-object-like-x';\nimport isArray from 'is-array-x';\nimport isBoolean from 'is-boolean-object';\nimport some from 'array-some-x';\nimport getPrototypeOf from 'get-prototype-of-x';\nimport $iterator$, {getSymbolIterator} from 'symbol-iterator-x';\nimport $species$ from 'symbol-species-x';\nimport create from 'object-create-x';\nimport toBoolean from 'to-boolean-x';\nimport attempt from 'attempt-x';\nimport arrayForEach from 'array-for-each-x';\nimport renameFunction from 'rename-function-x';\nimport methodize from 'simple-methodize-x';\nimport call from 'simple-call-x';\n\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void 0;\nconst SIZE = 'size';\nconst NEXT = 'next';\nconst KEY = 'key';\nconst VALUE = 'value';\nconst DONE = 'done';\nconst WRITABLE = 'writable';\nconst DELETE = 'delete';\nconst MAP = 'map';\nconst SET = 'set';\nconst PROP_CHANGED = '[[changed]]';\nconst PROP_CHANGE = '[[change]]';\nconst PROP_ID = '[[id]]';\nconst PROP_KEY = `[[${KEY}]]`;\nconst PROP_ORDER = '[[order]]';\nconst PROP_VALUE = `[[${VALUE}]]`;\nconst PROP_ITERATORHASMORE = '[[IteratorHasMore]]';\nconst PROP_MAP = '[[Map]]';\nconst PROP_MAPITERATIONKIND = '[[MapIterationKind]]';\nconst PROP_MAPNEXTINDEX = '[[MapNextIndex]]';\nconst PROP_SET = '[[Set]]';\nconst PROP_SETITERATIONKIND = '[[SetIterationKind]]';\nconst PROP_SETNEXTINDEX = '[[SetNextIndex]]';\nconst KIND_VALUE = VALUE;\nconst KIND_KEY = KEY;\nconst KIND_KEY_VALUE = `${KIND_KEY}+${KIND_VALUE}`;\nconst SAMEVALUEZERO = 'SameValueZero';\n\nconst tempArray = [];\nconst push = methodize(tempArray.push);\nconst splice = methodize(tempArray.splice);\nconst charAt = methodize(KEY.charAt);\nconst setPrototypeOf = methodize({}.constructor.setPrototypeOf);\nconst hasRealSymbolIterator = typeof $iterator$ === 'symbol';\n\n/**\n * The iterator identifier that is in use.\n *\n * Type {Symbol|string}.\n */\nexport const symIt = $iterator$;\n\nconst assertIterableEntryObject = function assertIterableEntryObject(kind, next) {\n  if (kind === MAP) {\n    if (isArrayLike(next[VALUE]) === false || next[VALUE].length < 2) {\n      throw new TypeError(`Iterator value ${isArrayLike(next[VALUE])} is not an entry object`);\n    }\n  }\n};\n\nconst setPropsIterable = function setPropsIterable(args) {\n  const [kind, context, next] = args;\n  const key = kind === MAP ? next[VALUE][0] : next[VALUE];\n  const indexof = indexOf(assertIsObject(context)[PROP_KEY], key, SAMEVALUEZERO);\n\n  if (indexof < 0) {\n    if (kind === MAP) {\n      push(context[PROP_VALUE], next[VALUE][1]);\n    }\n\n    push(context[PROP_KEY], key);\n    push(context[PROP_ORDER], context[PROP_ID].get());\n    context[PROP_ID][NEXT]();\n  } else if (kind === MAP) {\n    /* eslint-disable-next-line prefer-destructuring */\n    context[PROP_VALUE][indexof] = next[VALUE][1];\n  }\n};\n\nconst parseIterable = function parseIterable(args) {\n  const [kind, iterable, context, symbolIterator] = args;\n  const iterator = iterable[symbolIterator]();\n  let next = iterator[NEXT]();\n\n  assertIterableEntryObject(kind, next);\n\n  while (next[DONE] === false) {\n    setPropsIterable([kind, context, next]);\n    next = iterator[NEXT]();\n  }\n};\n\nconst assertStringEntryObject = function assertStringEntryObject(kind, iterable) {\n  if (kind === MAP) {\n    throw new TypeError(`Iterator value ${charAt(iterable, 0)} is not an entry object`);\n  }\n};\n\nconst getCharsString = function getCharsString(iterable, next) {\n  return {\n    char1: charAt(iterable, next),\n    char2: charAt(iterable, next + 1),\n  };\n};\n\nconst setContextString = function setContextString(context, key) {\n  const indexof = indexOf(assertIsObject(context)[PROP_KEY], key, SAMEVALUEZERO);\n\n  if (indexof < 0) {\n    push(context[PROP_KEY], key);\n    push(context[PROP_ORDER], context[PROP_ID].get());\n    context[PROP_ID][NEXT]();\n  }\n};\n\nconst getNextKey = function getNextKey(iterable, next) {\n  const {char1, char2} = getCharsString(iterable, next);\n\n  if (isSurrogatePair(char1, char2)) {\n    return {\n      key: char1 + char2,\n      nxt: next + 1,\n    };\n  }\n\n  return {\n    key: char1,\n    nxt: next,\n  };\n};\n\nconst parseString = function parseString(args) {\n  const [kind, iterable, context] = args;\n\n  assertStringEntryObject(kind, iterable);\n\n  let next = 0;\n  while (next < iterable.length) {\n    const nextKey = getNextKey(iterable, next);\n    next = nextKey.nxt;\n\n    setContextString(context, nextKey.key);\n    next += 1;\n  }\n};\n\nconst assertArrayLikeIterable = function assertArrayLikeIterable(iterable, next) {\n  if (isPrimitive(iterable[next])) {\n    throw new TypeError(`Iterator value ${isArrayLike(next[VALUE])} is not an entry object`);\n  }\n};\n\nconst setContextArrayLike = function setContextArrayLike(args) {\n  const [kind, context, key, iterable, next] = args;\n  const indexof = indexOf(assertIsObject(context)[PROP_KEY], key, SAMEVALUEZERO);\n\n  if (indexof < 0) {\n    if (kind === MAP) {\n      push(context[PROP_VALUE], iterable[next][1]);\n    }\n\n    push(context[PROP_KEY], key);\n    push(context[PROP_ORDER], context[PROP_ID].get());\n    context[PROP_ID][NEXT]();\n  } else if (kind === MAP) {\n    /* eslint-disable-next-line prefer-destructuring */\n    context[PROP_VALUE][indexof] = iterable[next][1];\n  }\n};\n\nconst parseArrayLike = function parseArrayLike(args) {\n  const [kind, iterable, context] = args;\n  let next = 0;\n  while (next < iterable.length) {\n    let key;\n\n    if (kind === MAP) {\n      assertArrayLikeIterable(iterable, next);\n\n      /* eslint-disable-next-line prefer-destructuring */\n      key = iterable[next][0];\n    } else {\n      key = iterable[next];\n    }\n\n    setContextArrayLike([kind, context, key, iterable, next]);\n    next += 1;\n  }\n};\n\nconst defineDefaultProps = function defineDefaultProps(context) {\n  defineProperties(context, {\n    [PROP_CHANGED]: {[VALUE]: false},\n    [PROP_ID]: {[VALUE]: new IdGenerator()},\n    [PROP_KEY]: {[VALUE]: []},\n    [PROP_ORDER]: {[VALUE]: []},\n  });\n};\n\nconst performParsing = function performParsing(args) {\n  const [, iterable, , symbolIterator] = args;\n\n  if (iterable && isFunction(iterable[symbolIterator])) {\n    parseIterable(args);\n  } else if (isString(iterable)) {\n    parseString(args);\n  } else if (isArrayLike(iterable)) {\n    parseArrayLike(args);\n  }\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * If an iterable object is passed, all of its elements will be added to the\n * new Map/Set, null is treated as undefined.\n *\n * @private\n * @param {string} kind - Either MAP or SET.\n * @param {object} context - The Map/Set object.\n * @param {*} iterable - Value to parsed.\n */\n// eslint-enable jsdoc/check-param-names\nconst parse = function parse(args) {\n  const [kind, context, iterable] = args;\n  const symbolIterator = getSymbolIterator(iterable);\n\n  if (kind === MAP) {\n    defineProperty(context, PROP_VALUE, {[VALUE]: []});\n  }\n\n  defineDefaultProps(context);\n  performParsing([kind, iterable, context, symbolIterator]);\n\n  defineProperty(context, SIZE, {[VALUE]: context[PROP_KEY].length, [WRITABLE]: true});\n};\n\nconst updatePointerIndexes = function updatePointerIndexes(context, pointers) {\n  some(context[PROP_ORDER], function predicate(id, count) {\n    pointers.index = count;\n\n    return id > pointers.order;\n  });\n};\n\nconst updateBaseForEach = function updateBaseForEach(args) {\n  const [context, pointers, length] = args;\n  let len = length;\n\n  if (context[PROP_CHANGE]) {\n    updatePointerIndexes(context, pointers);\n    context[PROP_CHANGE] = false;\n    len = context[PROP_KEY].length;\n  } else {\n    pointers.index += 1;\n  }\n\n  pointers.order = context[PROP_ORDER][pointers.index];\n\n  return len;\n};\n\nconst doCallback = function doCallback(args) {\n  const [kind, context, pointers, callback, thisArg] = args;\n\n  if (hasOwn(context[PROP_KEY], pointers.index)) {\n    const key = context[PROP_KEY][pointers.index];\n    const value = kind === MAP ? context[PROP_VALUE][pointers.index] : key;\n    call(callback, thisArg, [value, key, context]);\n  }\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The base forEach method executes a provided function once per each value\n * in the Map/Set object, in insertion order.\n *\n * @private\n * @param {string} kind - Either MAP or SET.\n * @param {object} context - The Map/Set object.\n * @param {Function} callback - Function to execute for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @returns {object} The Map/Set object.\n */\n// eslint-enable jsdoc/check-param-names\nconst baseForEach = function baseForEach(args) {\n  const [kind, context, callback, thisArg] = args;\n  assertIsObject(context);\n  assertIsFunction(callback);\n  context[PROP_CHANGE] = false;\n\n  const pointers = {index: 0, order: context[PROP_ORDER][0]};\n  let {length} = context[PROP_KEY];\n  while (pointers.index < length) {\n    doCallback([kind, context, pointers, callback, thisArg]);\n    length = updateBaseForEach([context, pointers, length]);\n  }\n\n  return context;\n};\n\n/**\n * The base has method returns a boolean indicating whether an element with\n * the specified key/value exists in a Map/Set object or not.\n *\n * @private\n * @param {*} key - The key/value to test for presence in the Map/Set object.\n * @returns {boolean} Returns true if an element with the specified key/value\n *  exists in the Map/Set object; otherwise false.\n */\nconst baseHas = function has(key) {\n  /* eslint-disable-next-line babel/no-invalid-this */\n  return indexOf(assertIsObject(this)[PROP_KEY], key, SAMEVALUEZERO) > -1;\n};\n\n/**\n * The base clear method removes all elements from a Map/Set object.\n *\n * @private\n * @param {string} kind - Either MAP or SET.\n * @param {object} context - The Map/Set object.\n * @returns {object} The Map/Set object.\n */\nconst baseClear = function baseClear(kind, context) {\n  assertIsObject(context);\n  context[PROP_ID].reset();\n  context[PROP_CHANGE] = true;\n  context[SIZE] = 0;\n  context[PROP_ORDER].length = 0;\n  context[PROP_KEY].length = 0;\n\n  if (kind === MAP) {\n    context[PROP_VALUE].length = 0;\n  }\n\n  return context;\n};\n\nconst setContextFoundBaseDelete = function setContextFoundBaseDelete(args) {\n  const [kind, context, indexof] = args;\n\n  if (kind === MAP) {\n    splice(context[PROP_VALUE], indexof, 1);\n  }\n\n  splice(context[PROP_KEY], indexof, 1);\n  splice(context[PROP_ORDER], indexof, 1);\n  context[PROP_CHANGE] = true;\n  context[SIZE] = context[PROP_KEY].length;\n\n  return true;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The base delete method removes the specified element from a Map/Set object.\n *\n * @private\n * @param {string} kind - Either MAP or SET.\n * @param {object} context - The Map/Set object.\n * @param {*} key - The key/value of the element to remove from Map/Set object.\n * @returns {object} The Map/Set object.\n */\n// eslint-enable jsdoc/check-param-names\nconst baseDelete = function baseDelete(args) {\n  const [kind, context, key] = args;\n  const indexof = indexOf(assertIsObject(context)[PROP_KEY], key, SAMEVALUEZERO);\n\n  return indexof > -1 && setContextFoundBaseDelete([kind, context, indexof]);\n};\n\nconst setContextFoundBaseAddSet = function setContextFoundBaseAddSet(args) {\n  const [kind, context, key, value] = args;\n\n  if (kind === MAP) {\n    push(context[PROP_VALUE], value);\n  }\n\n  push(context[PROP_KEY], key);\n  push(context[PROP_ORDER], context[PROP_ID].get());\n  context[PROP_ID][NEXT]();\n  context[PROP_CHANGE] = true;\n  context[SIZE] = context[PROP_KEY].length;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The base set and add method.\n *\n * @private\n * @param {string} kind - Either MAP or SET.\n * @param {object} context - The Map/Set object.\n * @param {*} key - The key or value of the element to add/set on the object.\n * @param {*} [value] - The value of the element to add to the Map object.\n * @returns {object} The Map/Set object.\n */\n// eslint-enable jsdoc/check-param-names\nconst baseAddSet = function baseAddSet(args) {\n  const [kind, context, key, value] = args;\n  const index = indexOf(assertIsObject(context)[PROP_KEY], key, SAMEVALUEZERO);\n\n  if (index > -1) {\n    if (kind === MAP) {\n      context[PROP_VALUE][index] = value;\n    }\n  } else {\n    setContextFoundBaseAddSet([kind, context, key, value]);\n  }\n\n  return context;\n};\n\nconst thisIteratorDescriptor = {\n  [VALUE]: function iterator() {\n    return this;\n  },\n};\n\nconst thisSpeciesDescriptor = {\n  get: function species() {\n    return this;\n  },\n};\n\n/**\n * An object is an iterator when it knows how to access items from a\n * collection one at a time, while keeping track of its current position\n * within that sequence. In JavaScript an iterator is an object that provides\n * a next() method which returns the next item in the sequence. This method\n * returns an object with two properties: done and value. Once created,\n * an iterator object can be used explicitly by repeatedly calling next().\n *\n * @private\n * @class\n * @param {object} context - The Set object.\n * @param {string} [iteratorKind] - Values are `value`, `key` or `key+value`.\n */\nconst SetIt = function SetIterator(context, iteratorKind) {\n  defineProperties(this, {\n    [PROP_ITERATORHASMORE]: {[VALUE]: true, [WRITABLE]: true},\n    [PROP_SET]: {[VALUE]: assertIsObject(context)},\n    [PROP_SETITERATIONKIND]: {[VALUE]: iteratorKind || KIND_VALUE},\n    [PROP_SETNEXTINDEX]: {[VALUE]: 0, [WRITABLE]: true},\n  });\n};\n\nconst getSetNextObject = function getSetNextObject(args) {\n  const [iteratorKind, context, index] = args;\n\n  return {\n    [DONE]: false,\n    [VALUE]: iteratorKind === KIND_KEY_VALUE ? [context[PROP_KEY][index], context[PROP_KEY][index]] : context[PROP_KEY][index],\n  };\n};\n\n/**\n * Once initialized, the next() method can be called to access key-value\n * pairs from the object in turn.\n *\n * @private\n * @function next\n * @returns {object} Returns an object with two properties: done and value.\n */\ndefineProperty(SetIt.prototype, NEXT, {\n  [VALUE]: function next() {\n    const context = assertIsObject(this[PROP_SET]);\n    const index = this[PROP_SETNEXTINDEX];\n    const iteratorKind = this[PROP_SETITERATIONKIND];\n    const more = this[PROP_ITERATORHASMORE];\n\n    if (index < context[PROP_KEY].length && more) {\n      this[PROP_SETNEXTINDEX] += 1;\n\n      return getSetNextObject([iteratorKind, context, index]);\n    }\n\n    this[PROP_ITERATORHASMORE] = false;\n\n    return {[DONE]: true, [VALUE]: UNDEFINED};\n  },\n});\n\n/**\n * The @@iterator property is the same Iterator object.\n *\n * @private\n * @function symIt\n * @memberof SetIterator.prototype\n * @returns {object} This Iterator object.\n */\ndefineProperty(SetIt.prototype, symIt, thisIteratorDescriptor);\n\nconst hasDescriptor = {[VALUE]: baseHas};\nconst sizeDescriptor = {[VALUE]: 0, [WRITABLE]: true};\n\n/**\n * This method returns a new Iterator object that contains the\n * values for each element in the Set object in insertion order.\n *\n * @private\n * @this Set\n * @returns {object} A new Iterator object.\n */\nconst setValuesIterator = function values() {\n  return new SetIt(this);\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The Set object lets you store unique values of any type, whether primitive\n * values or object references.\n *\n * @class Set\n * @param {*} [iterable] - If an iterable object is passed, all of its elements\n * will be added to the new Set. A null is treated as undefined.\n */\n// eslint-enable jsdoc/check-param-names\nexport const SetImplementation = function Set() {\n  if (toBoolean(this) === false || !(this instanceof SetImplementation)) {\n    throw new TypeError(\"Constructor Set requires 'new'\");\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  parse([SET, this, arguments.length ? arguments[0] : UNDEFINED]);\n};\n\n// noinspection JSValidateTypes\ndefineProperties(\n  SetImplementation.prototype,\n  /** @lends SetImplementation.prototype */ {\n    /**\n     * The add() method appends a new element with a specified value to the end\n     * of a Set object.\n     *\n     * @param {*} value - Required. The value of the element to add to the Set\n     *  object.\n     * @returns {object} The Set object.\n     */\n    add: {\n      [VALUE]: function add(value) {\n        return baseAddSet([SET, this, value]);\n      },\n    },\n    /**\n     * The clear() method removes all elements from a Set object.\n     *\n     * @returns {object} The Set object.\n     */\n    clear: {\n      [VALUE]: function clear() {\n        return baseClear(SET, this);\n      },\n    },\n    /**\n     * The delete() method removes the specified element from a Set object.\n     *\n     * @param {*} value - The value of the element to remove from the Set object.\n     * @returns {boolean} Returns true if an element in the Set object has been\n     *  removed successfully; otherwise false.\n     */\n    [DELETE]: {\n      [VALUE]: function $delete(value) {\n        return baseDelete([SET, this, value]);\n      },\n    },\n    /**\n     * The entries() method returns a new Iterator object that contains an\n     * array of [value, value] for each element in the Set object, in\n     * insertion order. For Set objects there is no key like in Map objects.\n     * However, to keep the API similar to the Map object, each entry has the\n     * same value for its key and value here, so that an array [value, value]\n     * is returned.\n     *\n     * @function\n     * @returns {object} A new Iterator object.\n     */\n    entries: {\n      [VALUE]: function entries() {\n        return new SetIt(this, KIND_KEY_VALUE);\n      },\n    },\n    /**\n     * The forEach() method executes a provided function once per each value\n     * in the Set object, in insertion order.\n     *\n     * @param {Function} callback - Function to execute for each element.\n     * @param {*} [thisArg] - Value to use as this when executing callback.\n     * @returns {object} The Set object.\n     */\n    forEach: {\n      [VALUE]: function forEach(callback, thisArg) {\n        return baseForEach([SET, this, callback, thisArg]);\n      },\n    },\n    /**\n     * The has() method returns a boolean indicating whether an element with the\n     * specified value exists in a Set object or not.\n     *\n     * @function\n     * @param {*} value - The value to test for presence in the Set object.\n     * @returns {boolean} Returns true if an element with the specified value\n     *  exists in the Set object; otherwise false.\n     */\n    has: hasDescriptor,\n    /**\n     * The keys() method is an alias for the `values` method (for similarity\n     * with Map objects); it behaves exactly the same and returns values of Set elements.\n     *\n     * @function\n     * @returns {object} A new Iterator object.\n     */\n    keys: {\n      [VALUE]: setValuesIterator,\n    },\n    /**\n     * The value of size is an integer representing how many entries the Set\n     * object has.\n     *\n     * @name size\n     * @memberof $SetObject\n     * @instance\n     * @type {number}\n     */\n    size: sizeDescriptor,\n    /**\n     * The values() method returns a new Iterator object that contains the\n     * values for each element in the Set object in insertion order.\n     *\n     * @function\n     * @returns {object} A new Iterator object.\n     */\n    values: {\n      [VALUE]: setValuesIterator,\n    },\n\n    [$species$]: thisSpeciesDescriptor,\n  },\n);\n\n/**\n * The initial value of the @@iterator property is the same function object\n * as the initial value of the values property.\n *\n * @function symIt\n * @memberof $SetObject.prototype\n * @returns {object} A new Iterator object.\n */\ndefineProperty(SetImplementation.prototype, symIt, {\n  [VALUE]: setValuesIterator,\n});\n\nrenameFunction(SetImplementation.prototype.delete, DELETE, true);\n\n/**\n * An object is an iterator when it knows how to access items from a\n * collection one at a time, while keeping track of its current position\n * within that sequence. In JavaScript an iterator is an object that provides\n * a next() method which returns the next item in the sequence. This method\n * returns an object with two properties: done and value. Once created,\n * an iterator object can be used explicitly by repeatedly calling next().\n *\n * @private\n * @class\n * @param {object} context - The Map object.\n * @param {string} iteratorKind - Values are `value`, `key` or `key+value`.\n */\nconst MapIt = function MapIterator(context, iteratorKind) {\n  defineProperties(this, {\n    [PROP_ITERATORHASMORE]: {[VALUE]: true, [WRITABLE]: true},\n    [PROP_MAP]: {[VALUE]: assertIsObject(context)},\n    [PROP_MAPITERATIONKIND]: {[VALUE]: iteratorKind},\n    [PROP_MAPNEXTINDEX]: {[VALUE]: 0, [WRITABLE]: true},\n  });\n};\n\nconst getMapNextObject = function getMapNextObject(args) {\n  const [iteratorKind, context, index] = args;\n\n  return {\n    [DONE]: false,\n    [VALUE]:\n      iteratorKind === KIND_KEY_VALUE\n        ? [context[PROP_KEY][index], context[PROP_VALUE][index]]\n        : context[`[[${iteratorKind}]]`][index],\n  };\n};\n\n/**\n * Once initialized, the next() method can be called to access key-value\n * pairs from the object in turn.\n *\n * @private\n * @function next\n * @returns {object} Returns an object with two properties: done and value.\n */\ndefineProperty(MapIt.prototype, NEXT, {\n  [VALUE]: function next() {\n    const context = assertIsObject(this[PROP_MAP]);\n    const index = this[PROP_MAPNEXTINDEX];\n    const iteratorKind = this[PROP_MAPITERATIONKIND];\n    const more = this[PROP_ITERATORHASMORE];\n\n    if (index < context[PROP_KEY].length && more) {\n      this[PROP_MAPNEXTINDEX] += 1;\n\n      return getMapNextObject([iteratorKind, context, index]);\n    }\n\n    this[PROP_ITERATORHASMORE] = false;\n\n    return {[DONE]: true, [VALUE]: UNDEFINED};\n  },\n});\n\n/**\n * The @@iterator property is the same Iterator object.\n *\n * @private\n * @function symIt\n * @memberof MapIterator.prototype\n * @returns {object} This Iterator object.\n */\ndefineProperty(MapIt.prototype, symIt, thisIteratorDescriptor);\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The Map object is a simple key/value map. Any value (both objects and\n * primitive values) may be used as either a key or a value.\n *\n * @class Map\n * @param {*} [iterable] - Iterable is an Array or other iterable object whose\n *  elements are key-value pairs (2-element Arrays). Each key-value pair is\n *  added to the new Map. A null is treated as undefined.\n */\n// eslint-enable jsdoc/check-param-names\nexport const MapImplementation = function Map() {\n  if (toBoolean(this) === false || !(this instanceof MapImplementation)) {\n    throw new TypeError(\"Constructor Map requires 'new'\");\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  parse([MAP, this, arguments.length ? arguments[0] : UNDEFINED]);\n};\n\n// noinspection JSValidateTypes\ndefineProperties(\n  MapImplementation.prototype,\n  /** @lends MapImplementation.prototype */ {\n    /**\n     * The clear() method removes all elements from a Map object.\n     *\n     * @returns {object} The Map object.\n     */\n    clear: {\n      [VALUE]: function clear() {\n        return baseClear(MAP, this);\n      },\n    },\n    /**\n     * The delete() method removes the specified element from a Map object.\n     *\n     * @param {*} key - The key of the element to remove from the Map object.\n     * @returns {boolean} Returns true if an element in the Map object has been\n     *  removed successfully.\n     */\n    [DELETE]: {\n      [VALUE]: function $delete(key) {\n        return baseDelete([MAP, this, key]);\n      },\n    },\n    /**\n     * The entries() method returns a new Iterator object that contains the\n     * [key, value] pairs for each element in the Map object in insertion order.\n     *\n     * @returns {object} A new Iterator object.\n     */\n    entries: {\n      [VALUE]: function entries() {\n        return new MapIt(this, KIND_KEY_VALUE);\n      },\n    },\n    /**\n     * The forEach() method executes a provided function once per each\n     * key/value pair in the Map object, in insertion order.\n     *\n     * @param {Function} callback - Function to execute for each element..\n     * @param {*} [thisArg] - Value to use as this when executing callback.\n     * @returns {object} The Map object.\n     */\n    forEach: {\n      [VALUE]: function forEach(callback, thisArg) {\n        return baseForEach([MAP, this, callback, thisArg]);\n      },\n    },\n    /**\n     * The get() method returns a specified element from a Map object.\n     *\n     * @param {*} key - The key of the element to return from the Map object.\n     * @returns {*} Returns the element associated with the specified key or\n     *  undefined if the key can't be found in the Map object.\n     */\n    get: {\n      [VALUE]: function get(key) {\n        const index = indexOf(assertIsObject(this)[PROP_KEY], key, SAMEVALUEZERO);\n\n        return index > -1 ? this[PROP_VALUE][index] : UNDEFINED;\n      },\n    },\n    /**\n     * The has() method returns a boolean indicating whether an element with\n     * the specified key exists or not.\n     *\n     * @function\n     * @param {*} key - The key of the element to test for presence in the Map object.\n     * @returns {boolean} Returns true if an element with the specified key\n     *  exists in the Map object; otherwise false.\n     */\n    has: hasDescriptor,\n    /**\n     * The keys() method returns a new Iterator object that contains the keys\n     * for each element in the Map object in insertion order.\n     *\n     * @returns {object} A new Iterator object.\n     */\n    keys: {\n      [VALUE]: function keys() {\n        return new MapIt(this, KIND_KEY);\n      },\n    },\n    /**\n     * The set() method adds a new element with a specified key and value to\n     * a Map object.\n     *\n     * @param {*} key - The key of the element to add to the Map object.\n     * @param {*} value - The value of the element to add to the Map object.\n     * @returns {object} The Map object.\n     */\n    set: {\n      [VALUE]: function set(key, value) {\n        return baseAddSet([MAP, this, key, value]);\n      },\n    },\n    /**\n     * The value of size is an integer representing how many entries the Map\n     * object has.\n     *\n     * @name size\n     * @memberof $MapObject\n     * @instance\n     * @type {number}\n     */\n    size: sizeDescriptor,\n    /**\n     * The values() method returns a new Iterator object that contains the\n     * values for each element in the Map object in insertion order.\n     *\n     * @returns {object} A new Iterator object.\n     */\n    values: {\n      [VALUE]: function values() {\n        return new MapIt(this, KIND_VALUE);\n      },\n    },\n\n    [$species$]: thisSpeciesDescriptor,\n  },\n);\n\n/**\n * The initial value of the @@iterator property is the same function object\n * as the initial value of the entries property.\n *\n * @function symIt\n * @memberof $MapObject.prototype\n * @returns {object} A new Iterator object.\n */\ndefineProperty(MapImplementation.prototype, symIt, {\n  [VALUE]: MapImplementation.prototype.entries,\n});\n\nrenameFunction(MapImplementation.prototype.delete, DELETE, true);\n\n/*\n * Determine whether to use shim or native.\n */\n\n/* istanbul ignore next */\nconst getMyClass = function getMyClass(Subject) {\n  const MyClass = function MyClass(arg) {\n    const testObject = new Subject(arg);\n    setPrototypeOf(testObject, MyClass.prototype);\n\n    return testObject;\n  };\n\n  setPrototypeOf(MyClass, Subject);\n  MyClass.prototype = create(Subject.prototype, {constructor: {[VALUE]: MyClass}});\n\n  return MyClass;\n};\n\nconst noNewfixee = function noNewfixee(Subject) {\n  const res = attempt(function attemptee() {\n    /* eslint-disable-next-line babel/new-cap */\n    return Subject();\n  });\n\n  return res.threw === false;\n};\n\nconst badDoneFixee = function badDoneFixee(Subject) {\n  const res = attempt(function attemptee() {\n    return new Subject().keys()[NEXT]()[DONE] === false;\n  });\n\n  return res.threw || res.value;\n};\n\nconst badNextFunction = function badNextFunction(Subject) {\n  // Safari 8\n  return isFunction(new Subject().keys()[NEXT]) === false;\n};\n\n/* Map fixes */\n/* istanbul ignore next */\nconst performMapFixes = function performMapFixes() {\n  const result = attempt(function attemptee() {\n    /* eslint-disable-next-line compat/compat */\n    return toBoolean(new Map() instanceof Map) === false;\n  });\n\n  let Export = result.threw || result.value ? MapImplementation : Map;\n\n  const peformMapFix = function peformMapFix(fixee) {\n    if (Export !== MapImplementation && fixee(Export)) {\n      Export = MapImplementation;\n    }\n  };\n\n  const fixees = [\n    noNewfixee,\n\n    function fixee(Subject) {\n      const testMap = new Subject();\n\n      if (typeof testMap[SIZE] !== 'number' || testMap[SIZE] !== 0) {\n        return true;\n      }\n\n      const propsMap = ['has', 'set', 'clear', 'delete', 'forEach', 'values', 'entries', 'keys', symIt];\n\n      return some(propsMap, function predicate(method) {\n        return isFunction(testMap[method]) === false;\n      });\n    },\n\n    function fixee(Subject) {\n      // Safari 8, for example, doesn't accept an iterable.\n      const res = attempt(function attemptee() {\n        return new Subject([[1, 2]]).get(1) !== 2;\n      });\n\n      return res.threw || res.result;\n    },\n\n    function fixee(Subject) {\n      const testMap = new Subject();\n\n      return testMap.set(1, 2) !== testMap;\n    },\n\n    function fixee(Subject) {\n      // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4\n      const testMap = new Subject([[1, 0], [2, 0], [3, 0], [4, 0]]);\n      testMap.set(-0, testMap);\n      const gets = testMap.get(0) === testMap && testMap.get(-0) === testMap;\n      const mapUsesSameValueZero = gets && testMap.has(0) && testMap.has(-0);\n\n      return mapUsesSameValueZero === false;\n    },\n\n    function fixee(Subject) {\n      if (setPrototypeOf) {\n        return false;\n      }\n\n      const MyMap = getMyClass(Subject);\n      const res = attempt(function attemptee() {\n        return toBoolean(new MyMap([]).set(42, 42) instanceof MyMap) === false;\n      });\n\n      return res.threw || res.value;\n    },\n\n    badDoneFixee,\n\n    badNextFunction,\n\n    function fixee(Subject) {\n      const testMapProto = hasRealSymbolIterator && getPrototypeOf(new Subject().keys());\n\n      return toBoolean(testMapProto) && isFunction(testMapProto[symIt]) === false;\n    },\n  ];\n\n  arrayForEach(fixees, function iteratee(fixee) {\n    peformMapFix(fixee);\n  });\n\n  return Export;\n};\n\n/* Set fixes */\n/* istanbul ignore next */\nconst performSetFixes = function performSetFixes() {\n  const result = attempt(function attemptee() {\n    /* eslint-disable-next-line compat/compat */\n    return toBoolean(new Set() instanceof Set) === false;\n  });\n\n  let Export = result.threw || result.value ? SetImplementation : Set;\n\n  const peformSetFix = function peformSetFix(fixee) {\n    if (Export !== SetImplementation && fixee(Export)) {\n      Export = SetImplementation;\n    }\n  };\n\n  const fixees = [\n    noNewfixee,\n\n    function fixee(Subject) {\n      const testSet = new Subject();\n\n      if (typeof testSet[SIZE] !== 'number' || testSet[SIZE] !== 0) {\n        /* istanbul ignore next */\n        return true;\n      }\n\n      const propsSet = ['has', 'add', 'clear', 'delete', 'forEach', 'values', 'entries', 'keys', symIt];\n\n      return some(propsSet, function predicate(method) {\n        return isFunction(testSet[method]) === false;\n      });\n    },\n\n    function fixee(Subject) {\n      const testSet = new Subject();\n      testSet.delete(0);\n      testSet.add(-0);\n\n      return testSet.has(0) === false || testSet.has(-0) === false;\n    },\n\n    function fixee(Subject) {\n      const testSet = new Subject();\n\n      return testSet.add(1) !== testSet;\n    },\n\n    function fixee(Subject) {\n      if (setPrototypeOf) {\n        return false;\n      }\n\n      const MySet = getMyClass(Subject);\n      const res = attempt(function attemptee() {\n        return toBoolean(new MySet([]).add(42) instanceof MySet) === false;\n      });\n\n      return res.threw || res.value;\n    },\n\n    badDoneFixee,\n\n    badNextFunction,\n\n    function fixee(Subject) {\n      const testSetProto = hasRealSymbolIterator && getPrototypeOf(new Subject().keys());\n\n      return toBoolean(testSetProto) && isFunction(testSetProto[symIt]) === false;\n    },\n  ];\n\n  arrayForEach(fixees, function iteratee(fixee) {\n    peformSetFix(fixee);\n  });\n\n  return Export;\n};\n\n/**\n * The Map object is a simple key/value map. Any value (both objects and\n * primitive values) may be used as either a key or a value.\n *\n * @class Map\n * @param {*} [iterable] - Iterable is an Array or other iterable object whose\n *  elements are key-value pairs (2-element Arrays). Each key-value pair is\n *  added to the new Map. A null is treated as undefined.\n */\nexport const MapConstructor = performMapFixes();\n\n/**\n * The Set object lets you store unique values of any type, whether primitive\n * values or object references.\n *\n * @class Set\n * @param {*} [iterable] - If an iterable object is passed, all of its elements\n * will be added to the new Set. A null is treated as undefined.\n */\nexport const SetConstructor = performSetFixes();\n\nconst hasImplementationProps = function hasImplementationProps(object) {\n  return (\n    isBoolean(object[PROP_CHANGED]) &&\n    isObjectLike(object[PROP_ID]) &&\n    isArray(object[PROP_KEY]) &&\n    isArray(object[PROP_ORDER]) &&\n    typeof object[SIZE] === 'number'\n  );\n};\n\nconst hasCommon = function hasCommon(object) {\n  return isObjectLike(object) && isFunction(object[symIt]) && hasImplementationProps(object);\n};\n\nexport const isMapImplementation = function isMapImplementation(object) {\n  return $isMap(object) || (hasCommon(object) && isArray(object[PROP_VALUE]));\n};\n\n/**\n * Determine if an `object` is a `Map`.\n *\n * @param {*} object - The object to test.\n * @returns {boolean} `true` if the `object` is a `Map`,\n *  else `false`.\n */\nexport const isMap = MapConstructor === MapImplementation ? isMapImplementation : $isMap;\n\nexport const isSetImplementation = function isSetImplementation(object) {\n  return $isSet(object) || (hasCommon(object) && typeof object[PROP_VALUE] === 'undefined');\n};\n\n/**\n * Determine if an `object` is a `Set`.\n *\n * @param {*} object - The object to test.\n * @returns {boolean} `true` if the `object` is a `Set`,\n *  else `false`.\n */\nexport const isSet = SetConstructor === SetImplementation ? isSetImplementation : $isSet;\n"],"sourceRoot":""}